# Option Service Queries and Mutations
createOption=mutation ($type:String!, $parentId:String, $code:String!, $english:String!, $french:String!) {createOption(type:$type, parentId:$parentId, name: {code:$code, english:$english, french:$french}) {optionId parent {optionId} type status mutable name {code english french}}}
findOption=query ($optionId:String!) {findOption(optionId:$optionId) {optionId parent {optionId} type status mutable name {code english french}}}
updateOption=mutation ($optionId:String!, $english:String, $french:String, $status:String) {updateOption(optionId:$optionId, english:$english, french:$french, status:$status) {optionId parent {optionId} type status mutable name {code english french}}}
countOptions=query ($parentId:String, $type:String, $status:String, $code:String, $english:String, $french:String) {countOptions(filter:{parentId:$parentId, type:$type, status:$status, code:$code, english:$english, french:$french})}
findOptions=query ($parentId:String, $type:String, $status:String, $code:String, $english:String, $french:String, $pageNumber:Int!, $pageSize:Int!, $sortField:[String]!, $sortOrder:[String]!) {findOptions(filter:{parentId:$parentId, type:$type, status:$status, code:$code, english:$english, french:$french}, paging:{pageNumber:$pageNumber, pageSize:$pageSize, sortField:$sortField, sortOrder:$sortOrder}) {number numberOfElements size totalPages totalElements content {optionId parent {optionId} type status mutable name {code english french }}}}

# Organization Service Queries and Mutations
createOrganization=mutation ($displayName:String!, $authenticationGroupIds:[String]!, $businessGroupIds:[String]!) {createOrganization(displayName:$displayName, authenticationGroupIds:$authenticationGroupIds, businessGroupIds:$businessGroupIds) {organizationId status displayName mainLocation {locationId} mainContact {personId} authenticationGroups {optionId} businessGroups {optionId}}}
updateOrganization=mutation ($organizationId:String!, $displayName:String, $mainLocationId:String, $mainContactId:String, $status:String, $authenticationGroupIds:[String], $businessGroupIds:[String]) {updateOrganization(organizationId:$organizationId, displayName:$displayName, mainLocationId:$mainLocationId, mainContactId:$mainContactId, status:$status, authenticationGroupIds:$authenticationGroupIds, businessGroupIds:$businessGroupIds) {organizationId status displayName mainLocation {locationId} mainContact {personId} authenticationGroups {optionId} businessGroups {optionId}}}

updateOrganizationMainLocation=mutation ($orgId:String!, $locId:String!) {updateOrganization(organizationId:$orgId, mainLocationId:$locId) {organizationId status displayName mainLocation {locationId} mainContact {personId} groups {code}}}
updateOrganizationMainContact=mutation ($orgId:String!, $personId:String!) {updateOrganization(organizationId:$orgId, mainContactId:$personId) {organizationId status displayName mainLocation {locationId} mainContact {personId} groups {code}}}
updateOrganizationGroups=mutation ($orgId:String!, $groups:[String]!) {updateOrganization(organizationId:$orgId, groups:$groups) {organizationId status displayName mainLocation {locationId} mainContact {personId} groups {code}}}
findOrganization=query ($orgId:String!) {findOrganization(organizationId:$orgId) {organizationId status displayName mainLocation {locationId} mainContact {personId} groups {code}}}
findOrganizationSummary=query ($orgId:String!) {findOrganization(organizationId:$orgId) {organizationId status displayName}}
countOrganizations=query {countOrganizations(filter:{${0}})}
findOrganizationDetails=query {findOrganizations(filter:{${0}}, paging:{pageNumber:${1}, pageSize:${2}, sortField:[${3}], sortOrder:[${4}]}) {number numberOfElements size totalPages totalElements content {organizationId status displayName mainLocation {locationId} mainContact {personId} groups {code}}}}
findOrganizationSummaries=query {findOrganizations(filter:{${0}}, paging:{pageNumber:${1}, pageSize:${2}, sortField:[${3}], sortOrder:[${4}]}) {number numberOfElements size totalPages totalElements content {organizationId status displayName}}}


# Location Service Queries and Mutations
createLocation=mutation ($organizationId:String!, $reference:String!, $displayName:String!, $street:String, $city:String, $provinceIdentifier:String, $provinceOther:String, $countryIdentifier:String, $countryOther:String, $postalCode:String) {createLocation(organizationId:$organizationId, reference:$reference, displayName:$displayName, address:{street:$street, city:$city, province:{identifier:$provinceIdentifier, other:$provinceOther}, country:{identifier:$countryIdentifier, other:$countryOther}, postalCode:$postalCode}) {locationId organization {organizationId} status reference displayName address {street city province {identifier other} country {identifier other} postalCode}}}
updateLocationName=mutation ($locationId:String!, $displayName:String) {updateLocation(locationId:$locationId, displayName:$displayName) {locationId organization {organizationId} status reference displayName address {street city province {identifier other} country {identifier other} postalCode}}}
updateLocationAddress=mutation ($locationId:String!, $street:String, $city:String, $provinceIdentifier:String, $provinceOther:String, $countryIdentifier:String, $countryOther:String, $postalCode:String) {updateLocation(locationId:$locationId, address:{street:$street, city:$city, province:{identifier:$provinceIdentifier, other:$provinceOther}, country:{identifier:$countryIdentifier, other:$countryOther}, postalCode:$postalCode}) {locationId organization {organizationId} status reference displayName address {street city province {identifier other} country {identifier other} postalCode}}}
updateLocationStatus=mutation ($locationId:String!, $status:String!) {updateLocation(locationId:$locationId, status:$status) {locationId organization {organizationId} status reference displayName}}
findLocation=query ($locationId:String!) {findLocation(locationId:$locationId) {locationId organization {organizationId} status reference displayName address {street city province {identifier other} country {identifier other} postalCode}}}
findLocationSummary=query ($locationId:String!) {findLocation(locationId:$locationId) {locationId organization {organizationId} status reference displayName}}
countLocations=query ($organizationId:String, $displayName:String, $reference:String, $status:String) {countLocations(filter:{organizationId:$organizationId, displayName:$displayName, reference:$reference, status:$status})}
findLocationSummaries=query ($organizationId:String, $displayName:String, $reference:String, $status:String, $pageNumber:Int!, $pageSize:Int!, $sortField:[String]!, $sortOrder:[String]!) {findLocations(filter:{organizationId:$organizationId, displayName:$displayName, reference:$reference, status:$status}, paging:{pageNumber:$pageNumber, pageSize:$pageSize, sortField:$sortField, sortOrder:$sortOrder}) {number numberOfElements size totalPages totalElements content {locationId organization {organizationId} status reference displayName}}}
findLocationDetails=query ($organizationId:String, $displayName:String, $reference:String, $status:String, $pageNumber:Int!, $pageSize:Int!, $sortField:[String]!, $sortOrder:[String]!) {findLocations(filter:{organizationId:$organizationId, displayName:$displayName, reference:$reference, status:$status}, paging:{pageNumber:$pageNumber, pageSize:$pageSize, sortField:$sortField, sortOrder:$sortOrder}) {number numberOfElements size totalPages totalElements content {locationId organization {organizationId} status reference displayName address {street city province {identifier other} country {identifier other} postalCode}}}}

# Person Service Queries and Mutations
createPerson=mutation {createPerson(organizationId:"${0}", name:{firstName:"${1}", middleName:"${2}", lastName:"${3}", salutation:"${4}"}, address:{street:"${5}", city:"${6}", province:"${7}", countryCode:"${8}", postalCode:"${9}"}, communication:{jobTitle:"${10}", language:"${11}", email:"${12}", phoneNumber:"${13}", phoneExtension:"${14}", faxNumber:"${15}"}, position:{sector:"${16}", unit:"${17}", classification:"${18}"}) {personId organizationId status displayName legalName {firstName middleName lastName salutation} address {street city province country postalCode} communication {jobTitle language email homePhone {number extension} faxNumber} position {sector unit classification}}}
enablePerson=mutation ($personId:String!) {updatePerson(personId:$personId, status:"active") {personId organizationId status displayName legalName {firstName middleName lastName salutation}}}
disablePerson=mutation ($personId:String!) {updatePerson(personId:$personId, status:"inactive") {personId organizationId status displayName legalName {firstName middleName lastName salutation}}}
updatePersonName=mutation {updatePerson(personId:"${0}", name:{firstName:"${1}", middleName:"${2}", lastName:"${3}", salutation:"${4}"}) {personId organizationId status displayName legalName {firstName middleName lastName salutation} address {street city province country postalCode} communication {jobTitle language email homePhone {number extension} faxNumber} position {sector unit classification}}}
updatePersonAddress=mutation {updatePerson(personId:"${0}", address:{street:"${1}", city:"${2}", province:"${3}", countryCode:"${4}", postalCode:"${5}"}) {personId organizationId status displayName legalName {firstName middleName lastName salutation} address {street city province country postalCode} communication {jobTitle language email homePhone {number extension} faxNumber} position {sector unit classification}}}
updatePersonCommunication=mutation {updatePerson(personId:"${0}", communication:{jobTitle:"${1}", language:"${2}", email:"${3}", phoneNumber:"${4}", phoneExtension:"${5}", faxNumber:"${6}"}) {personId organizationId status displayName legalName {firstName middleName lastName salutation} address {street city province country postalCode} communication {jobTitle language email homePhone {number extension} faxNumber} position {sector unit classification}}}
updatePersonBusinessUnit=mutation {updatePerson(personId:"${0}", position:{sector:"${1}", unit:"${2}", classification:"${3}"}) {personId organizationId status displayName legalName {firstName middleName lastName salutation} address {street city province country postalCode} communication {jobTitle language email homePhone {number extension} faxNumber} position {sector unit classification}}}
findPerson=query ($id:String!) {findPerson(personId:$id) {personId organizationId status displayName legalName {firstName middleName lastName salutation} address {street city province country postalCode} communication {jobTitle language email homePhone {number extension} faxNumber} position {sector unit classification}}}
findPersonSummary=query ($id:String!) {findPerson(personId:$id) {personId organizationId status displayName legalName {firstName middleName lastName salutation}}}
countPersons=query {countPersons(filter:{${0}})}
findPersonDetails=query {findPersons(filter:{${0}}, paging:{pageNumber:${1}, pageSize:${2}, sortField:[${3}], sortOrder:[${4}]}) {number numberOfElements size totalPages totalElements content {personId organizationId status displayName legalName {firstName middleName lastName salutation} address {street city province country postalCode} communication {jobTitle language email homePhone {number extension} faxNumber} position {sector unit classification}}}}
findPersonSummaries=query {findPersons(filter:{${0}}, paging:{pageNumber:${1}, pageSize:${2}, sortField:[${3}], sortOrder:[${4}]}) {number numberOfElements size totalPages totalElements content {personId organizationId status displayName legalName {firstName middleName lastName salutation}}}}

# User Service Queries and Mutations
createUser=mutation ($personId:String!, $username:String!, $roles:[String]!) {createUser(personId:$personId, username:$username, roles:$roles) {userId username status person {personId organizationId status displayName legalName {firstName middleName lastName salutation}} roles {code}}}
updateUserRoles=mutation ($userId:String!, $roles:[String]!) {updateUser(userId:$userId, roles:$roles) {userId username status person {personId organizationId status displayName legalName {firstName middleName lastName salutation}} roles {code}}}
enableUser=mutation ($userId:String!) {updateUser(userId:$userId, status:"active") {userId username status person {personId organizationId status displayName legalName {firstName middleName lastName salutation}} roles {code}}}
disableUser=mutation ($userId:String!) {updateUser(userId:$userId, status:"inactive") {userId username status person {personId organizationId status displayName legalName {firstName middleName lastName salutation}} roles {code}}}
findUser=query ($userId:String!) {findUser(userId:$userId) {userId username status person {personId organizationId status displayName legalName {firstName middleName lastName salutation}} roles {code}}}
resetUserPassword=mutation ($userId:String!) {resetUserPassword(userId:$userId)}
changeUserPassword=mutation ($userId:String!, $currentPassword:String!, $newPassword:String!) {changeUserPassword(userId:$userId, currentPassword:$currentPassword, newPassword:$newPassword)}
countUsers=query {countUsers(filter:{${0}})}
findUsers=query {findUsers(filter:{${0}}, paging:{pageNumber:${1}, pageSize:${2}, sortField:[${3}], sortOrder:[${4}]}) {number numberOfElements size totalPages totalElements content {userId username status person {personId organizationId status displayName legalName {firstName middleName lastName salutation}} roles {code}}}}  