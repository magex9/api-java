# Option Service Queries and Mutations
createOption=mutation ($type:String!, $parentId:String, $code:String!, $english:String!, $french:String!) {createOption(type:$type, parentId:$parentId, name: {code:$code, english:$english, french:$french}) {optionId parent {optionId} type status mutable name {code english french}}}
findOption=query ($optionId:String!) {findOption(optionId:$optionId) {optionId parent {optionId} type status mutable name {code english french}}}
updateOption=mutation ($optionId:String!, $english:String, $french:String, $status:String) {updateOption(optionId:$optionId, english:$english, french:$french, status:$status) {optionId parent {optionId} type status mutable name {code english french}}}
countOptions=query ($parentId:String, $type:String, $status:String, $code:String, $english:String, $french:String) {countOptions(filter:{parentId:$parentId, type:$type, status:$status, code:$code, english:$english, french:$french})}
findOptions=query ($parentId:String, $type:String, $status:String, $code:String, $english:String, $french:String, $pageNumber:Int!, $pageSize:Int!, $sortField:[String]!, $sortOrder:[String]!) {findOptions(filter:{parentId:$parentId, type:$type, status:$status, code:$code, english:$english, french:$french}, paging:{pageNumber:$pageNumber, pageSize:$pageSize, sortField:$sortField, sortOrder:$sortOrder}) {number numberOfElements size totalPages totalElements content {optionId parent {optionId} type status mutable name {code english french }}}}

# Organization Service Queries and Mutations
createOrganization=mutation ($displayName:String!, $authenticationGroupIds:[String]!, $businessGroupIds:[String]!) {createOrganization(displayName:$displayName, authenticationGroupIds:$authenticationGroupIds, businessGroupIds:$businessGroupIds) {organizationId status displayName mainLocation {locationId} mainContact {personId} authenticationGroups {optionId} businessGroups {optionId}}}
updateOrganization=mutation ($organizationId:String!, $displayName:String, $mainLocationId:String, $mainContactId:String, $status:String, $authenticationGroupIds:[String], $businessGroupIds:[String]) {updateOrganization(organizationId:$organizationId, displayName:$displayName, mainLocationId:$mainLocationId, mainContactId:$mainContactId, status:$status, authenticationGroupIds:$authenticationGroupIds, businessGroupIds:$businessGroupIds) {organizationId status displayName mainLocation {locationId} mainContact {personId} authenticationGroups {optionId} businessGroups {optionId}}}

updateOrganizationMainLocation=mutation ($orgId:String!, $locId:String!) {updateOrganization(organizationId:$orgId, mainLocationId:$locId) {organizationId status displayName mainLocation {locationId} mainContact {personId} groups {code}}}
updateOrganizationMainContact=mutation ($orgId:String!, $personId:String!) {updateOrganization(organizationId:$orgId, mainContactId:$personId) {organizationId status displayName mainLocation {locationId} mainContact {personId} groups {code}}}
updateOrganizationGroups=mutation ($orgId:String!, $groups:[String]!) {updateOrganization(organizationId:$orgId, groups:$groups) {organizationId status displayName mainLocation {locationId} mainContact {personId} groups {code}}}
findOrganization=query ($orgId:String!) {findOrganization(organizationId:$orgId) {organizationId status displayName mainLocation {locationId} mainContact {personId} groups {code}}}
findOrganizationSummary=query ($orgId:String!) {findOrganization(organizationId:$orgId) {organizationId status displayName}}
countOrganizations=query {countOrganizations(filter:{${0}})}
findOrganizationDetails=query {findOrganizations(filter:{${0}}, paging:{pageNumber:${1}, pageSize:${2}, sortField:[${3}], sortOrder:[${4}]}) {number numberOfElements size totalPages totalElements content {organizationId status displayName mainLocation {locationId} mainContact {personId} groups {code}}}}
findOrganizationSummaries=query {findOrganizations(filter:{${0}}, paging:{pageNumber:${1}, pageSize:${2}, sortField:[${3}], sortOrder:[${4}]}) {number numberOfElements size totalPages totalElements content {organizationId status displayName}}}


# Location Service Queries and Mutations
createLocation=mutation ($organizationId:String!, $reference:String!, $displayName:String!, $street:String, $city:String, $provinceIdentifier:String, $provinceOther:String, $countryIdentifier:String, $countryOther:String, $postalCode:String) {createLocation(organizationId:$organizationId, reference:$reference, displayName:$displayName, address:{street:$street, city:$city, province:{identifier:$provinceIdentifier, other:$provinceOther}, country:{identifier:$countryIdentifier, other:$countryOther}, postalCode:$postalCode}) {locationId organization {organizationId} status reference displayName address {street city province {identifier other} country {identifier other} postalCode}}}
updateLocationName=mutation ($locationId:String!, $displayName:String) {updateLocation(locationId:$locationId, displayName:$displayName) {locationId organization {organizationId} status reference displayName address {street city province {identifier other} country {identifier other} postalCode}}}
updateLocationAddress=mutation ($locationId:String!, $street:String, $city:String, $provinceIdentifier:String, $provinceOther:String, $countryIdentifier:String, $countryOther:String, $postalCode:String) {updateLocation(locationId:$locationId, address:{street:$street, city:$city, province:{identifier:$provinceIdentifier, other:$provinceOther}, country:{identifier:$countryIdentifier, other:$countryOther}, postalCode:$postalCode}) {locationId organization {organizationId} status reference displayName address {street city province {identifier other} country {identifier other} postalCode}}}
updateLocationStatus=mutation ($locationId:String!, $status:String!) {updateLocation(locationId:$locationId, status:$status) {locationId organization {organizationId} status reference displayName}}
findLocation=query ($locationId:String!) {findLocation(locationId:$locationId) {locationId organization {organizationId} status reference displayName address {street city province {identifier other} country {identifier other} postalCode}}}
findLocationSummary=query ($locationId:String!) {findLocation(locationId:$locationId) {locationId organization {organizationId} status reference displayName}}
countLocations=query ($organizationId:String, $displayName:String, $reference:String, $status:String) {countLocations(filter:{organizationId:$organizationId, displayName:$displayName, reference:$reference, status:$status})}
findLocationSummaries=query ($organizationId:String, $displayName:String, $reference:String, $status:String, $pageNumber:Int!, $pageSize:Int!, $sortField:[String]!, $sortOrder:[String]!) {findLocations(filter:{organizationId:$organizationId, displayName:$displayName, reference:$reference, status:$status}, paging:{pageNumber:$pageNumber, pageSize:$pageSize, sortField:$sortField, sortOrder:$sortOrder}) {number numberOfElements size totalPages totalElements content {locationId organization {organizationId} status reference displayName}}}
findLocationDetails=query ($organizationId:String, $displayName:String, $reference:String, $status:String, $pageNumber:Int!, $pageSize:Int!, $sortField:[String]!, $sortOrder:[String]!) {findLocations(filter:{organizationId:$organizationId, displayName:$displayName, reference:$reference, status:$status}, paging:{pageNumber:$pageNumber, pageSize:$pageSize, sortField:$sortField, sortOrder:$sortOrder}) {number numberOfElements size totalPages totalElements content {locationId organization {organizationId} status reference displayName address {street city province {identifier other} country {identifier other} postalCode}}}}

# Person Service Queries and Mutations
createPerson=mutation ($organizationId:String!, $firstName:String, $middleName:String, $lastName:String, $salutationIdentifier:String, $salutationOther:String, $street:String, $city:String, $provinceIdentifier:String, $provinceOther:String, $countryIdentifier:String, $countryOther:String, $postalCode:String, $jobTitle:String, $languageIdentifier:String, $languageOther:String, $email:String, $phoneNumber:String, $phoneExtension:String, $faxNumber:String, $businessRoleIds:[String]!) {createPerson(organizationId:$organizationId, name:{firstName:$firstName, middleName:$middleName, lastName:$lastName, salutation:{identifier:$salutationIdentifier, other:$salutationOther}} address:{street:$street, city:$city, province:{identifier:$provinceIdentifier, other:$provinceOther} country:{identifier:$countryIdentifier, other:$countryOther}, postalCode:$postalCode}, communication:{jobTitle:$jobTitle, language:{identifier:$languageIdentifier, other:$languageOther}, email:$email, phoneNumber:$phoneNumber, phoneExtension:$phoneExtension, faxNumber:$faxNumber}, businessRoleIds:$businessRoleIds) {personId organization {organizationId} status displayName legalName {firstName middleName lastName salutation{identifier other}} address {street city province{identifier other} country{identifier other} postalCode} communication {jobTitle language{identifier other} email homePhone {number extension} faxNumber} businessRoles{optionId}}}
updatePersonStatus=mutation ($personId:String!, $status:String!) {updatePerson(personId:$personId, status:$status) {personId organization {organizationId} status displayName}}
updatePersonName=mutation ($personId:String!, $firstName:String, $middleName:String, $lastName:String, $salutationIdentifier:String, $salutationOther:String) {updatePerson(personId:$personId, name:{firstName:$firstName, middleName:$middleName, lastName:$lastName, salutation:{identifier:$salutationIdentifier, other:$salutationOther}}) {personId organization {organizationId} status displayName legalName {firstName middleName lastName salutation{identifier other}} address {street city province{identifier other} country{identifier other} postalCode} communication {jobTitle language{identifier other} email homePhone {number extension} faxNumber} businessRoles{optionId}}}
updatePersonAddress=mutation ($personId:String!, $street:String, $city:String, $provinceIdentifier:String, $provinceOther:String, $countryIdentifier:String, $countryOther:String, $postalCode:String) {updatePerson(personId:$personId, address:{street:$street, city:$city, province:{identifier:$provinceIdentifier, other:$provinceOther} country:{identifier:$countryIdentifier, other:$countryOther}, postalCode:$postalCode})  {personId organization {organizationId} status displayName legalName {firstName middleName lastName salutation{identifier other}} address {street city province{identifier other} country{identifier other} postalCode} communication {jobTitle language{identifier other} email homePhone {number extension} faxNumber} businessRoles{optionId}}}
updatePersonCommunication=mutation ($personId:String!, $jobTitle:String, $languageIdentifier:String, $languageOther:String, $email:String, $phoneNumber:String, $phoneExtension:String, $faxNumber:String) {updatePerson(personId:$personId, communication:{jobTitle:$jobTitle, language:{identifier:$languageIdentifier, other:$languageOther}, email:$email, phoneNumber:$phoneNumber, phoneExtension:$phoneExtension, faxNumber:$faxNumber}) {personId organization {organizationId} status displayName legalName {firstName middleName lastName salutation{identifier other}} address {street city province{identifier other} country{identifier other} postalCode} communication {jobTitle language{identifier other} email homePhone {number extension} faxNumber} businessRoles{optionId}}}
updatePersonBusinessRoles=mutation ($personId:String!, $businessRoleIds:[String]!) {updatePerson(personId:$personId, businessRoleIds:$businessRoleIds) {personId organization {organizationId} status displayName legalName {firstName middleName lastName salutation{identifier other}} address {street city province{identifier other} country{identifier other} postalCode} communication {jobTitle language{identifier other} email homePhone {number extension} faxNumber} businessRoles{optionId}}}
findPerson=query ($personId:String!) {findPerson(personId:$personId) {personId organization {organizationId} status displayName legalName {firstName middleName lastName salutation{identifier other}} address {street city province{identifier other} country{identifier other} postalCode} communication {jobTitle language{identifier other} email homePhone {number extension} faxNumber} businessRoles{optionId}}}
findPersonSummary=query ($personId:String!) {findPerson(personId:$personId) {personId organization {organizationId} status displayName}}
countPersons=query ($organizationId:String, $displayName:String, $status:String) {countPersons(filter:{organizationId:$organizationId, displayName:$displayName, status:$status})}
findPersonSummaries=query ($organizationId:String, $displayName:String, $status:String, $pageNumber:Int!, $pageSize:Int!, $sortField:[String]!, $sortOrder:[String]!) {findPersons(filter:{organizationId:$organizationId, displayName:$displayName, status:$status}, paging:{pageNumber:$pageNumber, pageSize:$pageSize, sortField:$sortField, sortOrder:$sortOrder}) {number numberOfElements size totalPages totalElements content {personId organization {organizationId} status displayName}}}
findPersonDetails=query ($organizationId:String, $displayName:String, $status:String, $pageNumber:Int!, $pageSize:Int!, $sortField:[String]!, $sortOrder:[String]!) {findPersons(filter:{organizationId:$organizationId, displayName:$displayName, status:$status}, paging:{pageNumber:$pageNumber, pageSize:$pageSize, sortField:$sortField, sortOrder:$sortOrder}) {number numberOfElements size totalPages totalElements content {personId organization {organizationId} status displayName legalName {firstName middleName lastName salutation{identifier other}} address {street city province{identifier other} country{identifier other} postalCode} communication {jobTitle language{identifier other} email homePhone {number extension} faxNumber} businessRoles{optionId}}}}


# User Service Queries and Mutations
createUser=mutation ($personId:String!, $username:String!, $roles:[String]!) {createUser(personId:$personId, username:$username, roles:$roles) {userId username status person {personId organizationId status displayName legalName {firstName middleName lastName salutation}} roles {code}}}
updateUserRoles=mutation ($userId:String!, $roles:[String]!) {updateUser(userId:$userId, roles:$roles) {userId username status person {personId organizationId status displayName legalName {firstName middleName lastName salutation}} roles {code}}}
enableUser=mutation ($userId:String!) {updateUser(userId:$userId, status:"active") {userId username status person {personId organizationId status displayName legalName {firstName middleName lastName salutation}} roles {code}}}
disableUser=mutation ($userId:String!) {updateUser(userId:$userId, status:"inactive") {userId username status person {personId organizationId status displayName legalName {firstName middleName lastName salutation}} roles {code}}}
findUser=query ($userId:String!) {findUser(userId:$userId) {userId username status person {personId organizationId status displayName legalName {firstName middleName lastName salutation}} roles {code}}}
resetUserPassword=mutation ($userId:String!) {resetUserPassword(userId:$userId)}
changeUserPassword=mutation ($userId:String!, $currentPassword:String!, $newPassword:String!) {changeUserPassword(userId:$userId, currentPassword:$currentPassword, newPassword:$newPassword)}
countUsers=query {countUsers(filter:{${0}})}
findUsers=query {findUsers(filter:{${0}}, paging:{pageNumber:${1}, pageSize:${2}, sortField:[${3}], sortOrder:[${4}]}) {number numberOfElements size totalPages totalElements content {userId username status person {personId organizationId status displayName legalName {firstName middleName lastName salutation}} roles {code}}}}  