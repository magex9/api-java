# Build your Java project and run tests with Apache Maven!
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

#Pipeline Configuration
pool:
    vmImage: 'ubuntu-latest'

#variables:
#  - application_name ... application_name variable is defined as a pipeline input variable
#                         To use it in bash , it must be referred as ${APPLICATION_NAME}
variables:
- group: ut-server-info
- name: application_name
  value: crm-helloworld
- name: application_version
  value: 1.0.0-SNAPSHOT
- name: aks_service_connection_name
  value: 'appdev aks'
- name: application_group
  value: api-java
- name:  artifacts_knownHostsEntry
  value: 'ssh.dev.azure.com,40.82.190.38 ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQC7Hr1oTWqNqOlzGJOfGJ4NakVyIzf1rXYd4d7wo6jBlkLvCA4odBlL0mDUyZ0/QUfTTqeu+tm22gOsv+VrVTMk6vwRU75gY/y9ut5Mb3bR5BV58dKXyq9A9UeB5Cakehn5Zgm6x1mKoVyf+FFn26iYqXJRgzIZZcZ5V6hrE0Qg39kZm4az48o0AUbf6Sp4SLdvnuMa2sVNwHBboS7EJkm57XQPVU3/QpyNLHbWDdzwtrlS+ez30S3AdYhLKEOxAG8weOnyrtLJAUen9mTkol8oII1edf7mWWbWVf0nBmly21+nZcmCTISQBtdcyPaEno7fFQMDD26/s0lfKob4Kw8H'
- name:  artifacts_sshPublicKey
  value: 'ssh-rsa AAAAB3NzaC1yc2EAAAABJQAAAQEA3E8vI/k5tiMsIWDw2gKgiQPC9lla637uR6ZZVZRUwxKVoTMnmQxMKEg77YHtKysTo9buo2XWrSW8MjLebvj9o7em4m+fSRRS2I8OptwAy87qXEPTNNKSfYcUmhi5nZSCsDJnQK1RfkGncJ0Ruu4C044087Ots/z8892BpUJHDEQ3GaH9UtSZViRlwO6BGz9JRH2ltchBvU1eyt7M1SBs+7H6LohL2i8d8r8ElPV+EahA+xWBI7DNxOgaaZQmPiAKSJU0H+o8SbTyl3FESOJQH44zPi4rRGzNscKD5urIL0VSR+HF9JnDdaAghMntGWimGeSIOqXclSWJJt80bC/hlw== imported-openssh-key'
- name:  artifacts_sshPassphrase
  value: 'fintraccanafe'
- name:  artifacts_sshKeySecureFile
  value: 'azure-git.key'
- name: is_azure_branch
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/azure')]
- name: is_dev_branch
  value: $[eq(variables['Build.SourceBranch'], 'refs/heads/dev')]


resources:
  repositories:
  - repository: "ADLC"  # identifier (A-Z, a-z, 0-9, and underscore)
    type: "git"  # see the following "Type" topic
    name: "ADLC/ADLC"  # repository name (format depends on `type`)
    ref: "refs/heads/azure-pipelines"  # ref name to use; defaults to 'refs/heads/master'
    #endpoint: string  # name of the service connection to use (for types that aren't Azure Repos)

trigger:
      - azure
      - dev
#test
#Stages Configuration (to be ran sequentially)
stages:
- stage: CI
  displayName: Continuous Integration (CI) Build
  jobs:
  - job: Build_apps
    displayName: Build Applications
    steps:
            
    #Build Docker container and push to azure container registry
    - template: azure-build-docker-containers.yml
      parameters:
        environment: 'ut'
        application_group: crm
        application_name: crm-api-spring-boot-server
        application_version: $(application_version)
        dockerfile: ./crm-api-spring-boot-server.dockerfile 


- stage: Continuous_Deployment
  displayName: Continuous Deployment to UT
  condition: and(succeeded(), or(eq(variables.is_azure_branch, true),eq(variables.is_dev_branch, true)))
  jobs:

    - deployment: Deploy
      displayName: "Deploy Application to UT"
      environment: 'ut'
      strategy:
      # default deployment strategy, more coming...
        runOnce:
          deploy:
            steps: 
            - task: HelmInstaller@1
              inputs:
                helmVersionToInstall: 'latest'
            - task: HelmDeploy@0
              inputs:
                connectionType: 'Azure Resource Manager'
                azureSubscription: 'appdev aks connection'
                azureResourceGroup: 'AppDev_Kubernetes'
                kubernetesCluster: 'appdev-cluster'
                namespace: $(Build.SourceBranch)
                command: 'upgrade'
                chartType: 'FilePath'
                chartPath: '$(Pipeline.Workspace)/helm-charts/crm-api-spring-boot-server'
                releaseName: 'crm-api-spring-boot-server'
                force: false
                failOnStderr: false
                overrideValues: 'application.version=$(application_version)-$(Build.BuildID)'
                #recreate: true
