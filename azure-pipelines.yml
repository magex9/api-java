# Build your Java project and run tests with Apache Maven!
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

#Pipeline Configuration
pool:
    vmImage: 'ubuntu-latest'

#variables:
#  - application_name ... application_name variable is defined as a pipeline input variable
#                         To use it in bash , it must be referred as ${APPLICATION_NAME}

trigger:
      - azure
#test
#Stages Configuration (to be ran sequentially)
stages:
- stage: Build
  jobs:
  - job: Build
    steps:
    
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        options: '-Dmaven.test.failure.ignore=true'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        mavenVersionOption: 'Default'
        mavenOptions: '-Xmx3072m'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

    - task: MavenAuthenticate@0
      inputs:
      artifactsFeeds: 'appdev-snapshots'
    - task: Maven@3
      inputs:
        mavenPomFile: 'pom.xml'
        goals: 'deploy'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: '1.11'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: true
        effectivePomSkip: true
        sonarQubeRunAnalysis: false

    - template: azure-package.yml
      parameters:
        application_name: crm-helloworld
    - template: azure-package.yml
      parameters:
        application_name: crm-activemq-spring-boot-server
