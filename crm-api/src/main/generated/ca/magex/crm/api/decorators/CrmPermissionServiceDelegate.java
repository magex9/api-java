package ca.magex.crm.api.decorators;

/**
 * AUTO-GENERATED: This file is auto-generated by ca.magex.json.javadoc.JavadocDelegationBuilder
 * 
 * Logging and delegate decorators for the CRM services and policies
 * 
 * This delegate may be extended so that implementations can be kept clean if they don't need to implement every single field.
 * 
 * @author magex
 */
public class CrmPermissionServiceDelegate implements ca.magex.crm.api.services.CrmPermissionService {
	
	private ca.magex.crm.api.services.CrmPermissionService delegate;
	
	public CrmPermissionServiceDelegate(ca.magex.crm.api.services.CrmPermissionService delegate) {
		this.delegate = delegate;
	}
	
	@Override
	public ca.magex.crm.api.roles.Group prototypeGroup(ca.magex.crm.api.system.Localized name) {
		return delegate.prototypeGroup(name);
	}
	
	@Override
	public ca.magex.crm.api.roles.Group createGroup(ca.magex.crm.api.roles.Group group) {
		return delegate.createGroup(group);
	}
	
	@Override
	public ca.magex.crm.api.roles.Group createGroup(ca.magex.crm.api.system.Localized name) {
		return delegate.createGroup(name);
	}
	
	@Override
	public ca.magex.crm.api.roles.Group findGroup(ca.magex.crm.api.system.Identifier groupId) {
		return delegate.findGroup(groupId);
	}
	
	@Override
	public ca.magex.crm.api.roles.Group findGroupByCode(String code) {
		return delegate.findGroupByCode(code);
	}
	
	@Override
	public ca.magex.crm.api.roles.Group updateGroupName(ca.magex.crm.api.system.Identifier groupId, ca.magex.crm.api.system.Localized name) {
		return delegate.updateGroupName(groupId, name);
	}
	
	@Override
	public ca.magex.crm.api.roles.Group enableGroup(ca.magex.crm.api.system.Identifier groupId) {
		return delegate.enableGroup(groupId);
	}
	
	@Override
	public ca.magex.crm.api.roles.Group disableGroup(ca.magex.crm.api.system.Identifier groupId) {
		return delegate.disableGroup(groupId);
	}
	
	@Override
	public ca.magex.crm.api.filters.GroupsFilter defaultGroupsFilter() {
		return delegate.defaultGroupsFilter();
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.roles.Group> findGroups(ca.magex.crm.api.filters.GroupsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		return delegate.findGroups(filter, paging);
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.roles.Group> findGroups(ca.magex.crm.api.filters.GroupsFilter filter) {
		return delegate.findGroups(filter);
	}
	
	@Override
	public java.util.List<String> findActiveGroupCodes() {
		return delegate.findActiveGroupCodes();
	}
	
	@Override
	public ca.magex.crm.api.roles.Role prototypeRole(ca.magex.crm.api.system.Identifier groupId, ca.magex.crm.api.system.Localized name) {
		return delegate.prototypeRole(groupId, name);
	}
	
	@Override
	public ca.magex.crm.api.roles.Role createRole(ca.magex.crm.api.roles.Role role) {
		return delegate.createRole(role);
	}
	
	@Override
	public ca.magex.crm.api.roles.Role createRole(ca.magex.crm.api.system.Identifier groupId, ca.magex.crm.api.system.Localized name) {
		return delegate.createRole(groupId, name);
	}
	
	@Override
	public ca.magex.crm.api.roles.Role findRole(ca.magex.crm.api.system.Identifier roleId) {
		return delegate.findRole(roleId);
	}
	
	@Override
	public ca.magex.crm.api.roles.Role findRoleByCode(String code) {
		return delegate.findRoleByCode(code);
	}
	
	@Override
	public ca.magex.crm.api.roles.Role updateRoleName(ca.magex.crm.api.system.Identifier roleId, ca.magex.crm.api.system.Localized name) {
		return delegate.updateRoleName(roleId, name);
	}
	
	@Override
	public ca.magex.crm.api.roles.Role enableRole(ca.magex.crm.api.system.Identifier roleId) {
		return delegate.enableRole(roleId);
	}
	
	@Override
	public ca.magex.crm.api.roles.Role disableRole(ca.magex.crm.api.system.Identifier roleId) {
		return delegate.disableRole(roleId);
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.roles.Role> findRoles(ca.magex.crm.api.filters.RolesFilter filter, ca.magex.crm.api.filters.Paging paging) {
		return delegate.findRoles(filter, paging);
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.roles.Role> findRoles(ca.magex.crm.api.filters.RolesFilter filter) {
		return delegate.findRoles(filter);
	}
	
	@Override
	public java.util.List<ca.magex.crm.api.roles.Role> findRoles() {
		return delegate.findRoles();
	}
	
	@Override
	public java.util.List<String> findActiveRoleCodesForGroup(String group) {
		return delegate.findActiveRoleCodesForGroup(group);
	}
	
	@Override
	public ca.magex.crm.api.filters.RolesFilter defaultRolesFilter() {
		return delegate.defaultRolesFilter();
	}
	
	@Override
	public ca.magex.crm.api.filters.Paging defaultGroupPaging() {
		return delegate.defaultGroupPaging();
	}
	
	@Override
	public ca.magex.crm.api.filters.Paging defaultRolePaging() {
		return delegate.defaultRolePaging();
	}
	
}
