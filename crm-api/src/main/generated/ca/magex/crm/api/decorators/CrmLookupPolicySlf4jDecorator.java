package ca.magex.crm.api.decorators;

/**
 * AUTO-GENERATED: This file is auto-generated by ca.magex.json.javadoc.JavadocInterfaceAdapterBuilder
 * 
 * Logging and delegate decorators for the CRM services and policies
 * 
 * This class enables to you to inject nicely formatted slf4j logging onto any class you want.
 * <dl>
 *     <dd>TRACE</dd><dt>Log the method call with parameters including the result and execution time.</dt>
 *     <dd>DEBUG</dd><dt>Log the method call with parameters with the execution time.</dt>
 *     <dd>INFO</dd><dt>Log the method call with parameters.</dt>
 *     <dd>WARNING</dd><dt>No logging</dt>
 *     <dd>ERROR</dd><dt>No logging</dt>
 * </dl>
 * 
 * @author magex
 */
public class CrmLookupPolicySlf4jDecorator implements ca.magex.crm.api.policies.CrmLookupPolicy {
	
	private ca.magex.crm.api.policies.CrmLookupPolicy delegate;
	
	private org.slf4j.Logger logger;
	
	public CrmLookupPolicySlf4jDecorator(ca.magex.crm.api.policies.CrmLookupPolicy delegate, org.slf4j.Logger logger) {
		this.delegate = delegate;
		this.logger = logger;
	}
	
	@Override
	public boolean canCreateLookup() {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling canCreateLookup()");
				boolean result = delegate.canCreateLookup();
				logger.trace("Executed canCreateLookup() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on canCreateLookup() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling canCreateLookup()");
				boolean result = delegate.canCreateLookup();
				logger.debug("Executed canCreateLookup() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on canCreateLookup() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling canCreateLookup()");
			return delegate.canCreateLookup();
		}
		else {
			return delegate.canCreateLookup();
		}
	}
	
	@Override
	public boolean canViewLookup(String lookupCode) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling canViewLookup(" + lookupCode + ")");
				boolean result = delegate.canViewLookup(lookupCode);
				logger.trace("Executed canViewLookup(" + lookupCode + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on canViewLookup(" + lookupCode + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling canViewLookup(" + lookupCode + ")");
				boolean result = delegate.canViewLookup(lookupCode);
				logger.debug("Executed canViewLookup(" + lookupCode + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on canViewLookup(" + lookupCode + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling canViewLookup(" + lookupCode + ")");
			return delegate.canViewLookup(lookupCode);
		}
		else {
			return delegate.canViewLookup(lookupCode);
		}
	}
	
	@Override
	public boolean canViewLookup(ca.magex.crm.api.system.Identifier lookupId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling canViewLookup(" + lookupId + ")");
				boolean result = delegate.canViewLookup(lookupId);
				logger.trace("Executed canViewLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on canViewLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling canViewLookup(" + lookupId + ")");
				boolean result = delegate.canViewLookup(lookupId);
				logger.debug("Executed canViewLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on canViewLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling canViewLookup(" + lookupId + ")");
			return delegate.canViewLookup(lookupId);
		}
		else {
			return delegate.canViewLookup(lookupId);
		}
	}
	
	@Override
	public boolean canUpdateLookup(ca.magex.crm.api.system.Identifier lookupId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling canUpdateLookup(" + lookupId + ")");
				boolean result = delegate.canUpdateLookup(lookupId);
				logger.trace("Executed canUpdateLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on canUpdateLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling canUpdateLookup(" + lookupId + ")");
				boolean result = delegate.canUpdateLookup(lookupId);
				logger.debug("Executed canUpdateLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on canUpdateLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling canUpdateLookup(" + lookupId + ")");
			return delegate.canUpdateLookup(lookupId);
		}
		else {
			return delegate.canUpdateLookup(lookupId);
		}
	}
	
	@Override
	public boolean canEnableLookup(ca.magex.crm.api.system.Identifier lookupId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling canEnableLookup(" + lookupId + ")");
				boolean result = delegate.canEnableLookup(lookupId);
				logger.trace("Executed canEnableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on canEnableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling canEnableLookup(" + lookupId + ")");
				boolean result = delegate.canEnableLookup(lookupId);
				logger.debug("Executed canEnableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on canEnableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling canEnableLookup(" + lookupId + ")");
			return delegate.canEnableLookup(lookupId);
		}
		else {
			return delegate.canEnableLookup(lookupId);
		}
	}
	
	@Override
	public boolean canDisableLookup(ca.magex.crm.api.system.Identifier lookupId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling canDisableLookup(" + lookupId + ")");
				boolean result = delegate.canDisableLookup(lookupId);
				logger.trace("Executed canDisableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on canDisableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling canDisableLookup(" + lookupId + ")");
				boolean result = delegate.canDisableLookup(lookupId);
				logger.debug("Executed canDisableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on canDisableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling canDisableLookup(" + lookupId + ")");
			return delegate.canDisableLookup(lookupId);
		}
		else {
			return delegate.canDisableLookup(lookupId);
		}
	}
	
}
