package ca.magex.crm.api.decorators;

/**
 * AUTO-GENERATED: This file is auto-generated by ca.magex.json.javadoc.JavadocInterfaceAdapterBuilder
 * 
 * Logging and delegate decorators for the CRM services and policies
 * 
 * This class enables to you to inject nicely formatted slf4j logging onto any class you want.
 * <dl>
 *     <dd>TRACE</dd><dt>Log the method call with parameters including the result and execution time.</dt>
 *     <dd>DEBUG</dd><dt>Log the method call with parameters with the execution time.</dt>
 *     <dd>INFO</dd><dt>Log the method call with parameters.</dt>
 *     <dd>WARNING</dd><dt>No logging</dt>
 *     <dd>ERROR</dd><dt>No logging</dt>
 * </dl>
 * 
 * @author magex
 */
public class CrmPersonRepositorySlf4jDecorator implements ca.magex.crm.api.repositories.CrmPersonRepository {
	
	private ca.magex.crm.api.repositories.CrmPersonRepository delegate;
	
	private org.slf4j.Logger logger;
	
	public CrmPersonRepositorySlf4jDecorator(ca.magex.crm.api.repositories.CrmPersonRepository delegate, org.slf4j.Logger logger) {
		this.delegate = delegate;
		this.logger = logger;
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonDetails> findPersonDetails(ca.magex.crm.api.filters.PersonsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findPersonDetails(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonDetails> result = delegate.findPersonDetails(filter, paging);
				logger.trace("Executed findPersonDetails(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findPersonDetails(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findPersonDetails(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonDetails> result = delegate.findPersonDetails(filter, paging);
				logger.debug("Executed findPersonDetails(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findPersonDetails(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findPersonDetails(" + filter + ", " + paging + ")");
			return delegate.findPersonDetails(filter, paging);
		}
		else {
			return delegate.findPersonDetails(filter, paging);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonSummary> findPersonSummary(ca.magex.crm.api.filters.PersonsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findPersonSummary(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonSummary> result = delegate.findPersonSummary(filter, paging);
				logger.trace("Executed findPersonSummary(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findPersonSummary(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findPersonSummary(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonSummary> result = delegate.findPersonSummary(filter, paging);
				logger.debug("Executed findPersonSummary(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findPersonSummary(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findPersonSummary(" + filter + ", " + paging + ")");
			return delegate.findPersonSummary(filter, paging);
		}
		else {
			return delegate.findPersonSummary(filter, paging);
		}
	}
	
	@Override
	public long countPersons(ca.magex.crm.api.filters.PersonsFilter filter) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling countPersons(" + filter + ")");
				long result = delegate.countPersons(filter);
				logger.trace("Executed countPersons(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on countPersons(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling countPersons(" + filter + ")");
				long result = delegate.countPersons(filter);
				logger.debug("Executed countPersons(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on countPersons(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling countPersons(" + filter + ")");
			return delegate.countPersons(filter);
		}
		else {
			return delegate.countPersons(filter);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonDetails findPersonDetails(ca.magex.crm.api.system.Identifier personId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findPersonDetails(" + personId + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.findPersonDetails(personId);
				logger.trace("Executed findPersonDetails(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findPersonDetails(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findPersonDetails(" + personId + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.findPersonDetails(personId);
				logger.debug("Executed findPersonDetails(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findPersonDetails(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findPersonDetails(" + personId + ")");
			return delegate.findPersonDetails(personId);
		}
		else {
			return delegate.findPersonDetails(personId);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonSummary findPersonSummary(ca.magex.crm.api.system.Identifier personId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findPersonSummary(" + personId + ")");
				ca.magex.crm.api.crm.PersonSummary result = delegate.findPersonSummary(personId);
				logger.trace("Executed findPersonSummary(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findPersonSummary(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findPersonSummary(" + personId + ")");
				ca.magex.crm.api.crm.PersonSummary result = delegate.findPersonSummary(personId);
				logger.debug("Executed findPersonSummary(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findPersonSummary(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findPersonSummary(" + personId + ")");
			return delegate.findPersonSummary(personId);
		}
		else {
			return delegate.findPersonSummary(personId);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonDetails savePersonDetails(ca.magex.crm.api.crm.PersonDetails person) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling savePersonDetails(" + person + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.savePersonDetails(person);
				logger.trace("Executed savePersonDetails(" + person + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on savePersonDetails(" + person + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling savePersonDetails(" + person + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.savePersonDetails(person);
				logger.debug("Executed savePersonDetails(" + person + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on savePersonDetails(" + person + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling savePersonDetails(" + person + ")");
			return delegate.savePersonDetails(person);
		}
		else {
			return delegate.savePersonDetails(person);
		}
	}
	
}
