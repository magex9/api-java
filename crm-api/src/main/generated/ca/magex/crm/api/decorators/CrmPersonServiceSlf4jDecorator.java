package ca.magex.crm.api.decorators;

/**
 * AUTO-GENERATED: This file is auto-generated by ca.magex.json.javadoc.JavadocInterfaceAdapterBuilder
 * 
 * Logging and delegate decorators for the CRM services and policies
 * 
 * This class enables to you to inject nicely formatted slf4j logging onto any class you want.
 * <dl>
 *     <dd>TRACE</dd><dt>Log the method call with parameters including the result and execution time.</dt>
 *     <dd>DEBUG</dd><dt>Log the method call with parameters with the execution time.</dt>
 *     <dd>INFO</dd><dt>Log the method call with parameters.</dt>
 *     <dd>WARNING</dd><dt>No logging</dt>
 *     <dd>ERROR</dd><dt>No logging</dt>
 * </dl>
 * 
 * @author magex
 */
public class CrmPersonServiceSlf4jDecorator implements ca.magex.crm.api.services.CrmPersonService {
	
	private ca.magex.crm.api.services.CrmPersonService delegate;
	
	private org.slf4j.Logger logger;
	
	public CrmPersonServiceSlf4jDecorator(ca.magex.crm.api.services.CrmPersonService delegate, org.slf4j.Logger logger) {
		this.delegate = delegate;
		this.logger = logger;
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonDetails prototypePerson(ca.magex.crm.api.system.Identifier organizationId, ca.magex.crm.api.common.PersonName name, ca.magex.crm.api.common.MailingAddress address, ca.magex.crm.api.common.Communication communication, ca.magex.crm.api.common.BusinessPosition position) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling prototypePerson(" + organizationId + ", " + name + ", " + address + ", " + communication + ", " + position + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.prototypePerson(organizationId, name, address, communication, position);
				logger.trace("Executed prototypePerson(" + organizationId + ", " + name + ", " + address + ", " + communication + ", " + position + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on prototypePerson(" + organizationId + ", " + name + ", " + address + ", " + communication + ", " + position + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling prototypePerson(" + organizationId + ", " + name + ", " + address + ", " + communication + ", " + position + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.prototypePerson(organizationId, name, address, communication, position);
				logger.debug("Executed prototypePerson(" + organizationId + ", " + name + ", " + address + ", " + communication + ", " + position + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on prototypePerson(" + organizationId + ", " + name + ", " + address + ", " + communication + ", " + position + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling prototypePerson(" + organizationId + ", " + name + ", " + address + ", " + communication + ", " + position + ")");
			return delegate.prototypePerson(organizationId, name, address, communication, position);
		}
		else {
			return delegate.prototypePerson(organizationId, name, address, communication, position);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonDetails createPerson(ca.magex.crm.api.crm.PersonDetails prototype) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling createPerson(" + prototype + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.createPerson(prototype);
				logger.trace("Executed createPerson(" + prototype + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on createPerson(" + prototype + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling createPerson(" + prototype + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.createPerson(prototype);
				logger.debug("Executed createPerson(" + prototype + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on createPerson(" + prototype + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling createPerson(" + prototype + ")");
			return delegate.createPerson(prototype);
		}
		else {
			return delegate.createPerson(prototype);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonDetails createPerson(ca.magex.crm.api.system.Identifier organizationId, ca.magex.crm.api.common.PersonName name, ca.magex.crm.api.common.MailingAddress address, ca.magex.crm.api.common.Communication communication, ca.magex.crm.api.common.BusinessPosition position) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling createPerson(" + organizationId + ", " + name + ", " + address + ", " + communication + ", " + position + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.createPerson(organizationId, name, address, communication, position);
				logger.trace("Executed createPerson(" + organizationId + ", " + name + ", " + address + ", " + communication + ", " + position + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on createPerson(" + organizationId + ", " + name + ", " + address + ", " + communication + ", " + position + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling createPerson(" + organizationId + ", " + name + ", " + address + ", " + communication + ", " + position + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.createPerson(organizationId, name, address, communication, position);
				logger.debug("Executed createPerson(" + organizationId + ", " + name + ", " + address + ", " + communication + ", " + position + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on createPerson(" + organizationId + ", " + name + ", " + address + ", " + communication + ", " + position + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling createPerson(" + organizationId + ", " + name + ", " + address + ", " + communication + ", " + position + ")");
			return delegate.createPerson(organizationId, name, address, communication, position);
		}
		else {
			return delegate.createPerson(organizationId, name, address, communication, position);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonSummary enablePerson(ca.magex.crm.api.system.Identifier personId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling enablePerson(" + personId + ")");
				ca.magex.crm.api.crm.PersonSummary result = delegate.enablePerson(personId);
				logger.trace("Executed enablePerson(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on enablePerson(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling enablePerson(" + personId + ")");
				ca.magex.crm.api.crm.PersonSummary result = delegate.enablePerson(personId);
				logger.debug("Executed enablePerson(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on enablePerson(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling enablePerson(" + personId + ")");
			return delegate.enablePerson(personId);
		}
		else {
			return delegate.enablePerson(personId);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonSummary disablePerson(ca.magex.crm.api.system.Identifier personId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling disablePerson(" + personId + ")");
				ca.magex.crm.api.crm.PersonSummary result = delegate.disablePerson(personId);
				logger.trace("Executed disablePerson(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on disablePerson(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling disablePerson(" + personId + ")");
				ca.magex.crm.api.crm.PersonSummary result = delegate.disablePerson(personId);
				logger.debug("Executed disablePerson(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on disablePerson(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling disablePerson(" + personId + ")");
			return delegate.disablePerson(personId);
		}
		else {
			return delegate.disablePerson(personId);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonDetails updatePersonName(ca.magex.crm.api.system.Identifier personId, ca.magex.crm.api.common.PersonName name) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling updatePersonName(" + personId + ", " + name + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.updatePersonName(personId, name);
				logger.trace("Executed updatePersonName(" + personId + ", " + name + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on updatePersonName(" + personId + ", " + name + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling updatePersonName(" + personId + ", " + name + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.updatePersonName(personId, name);
				logger.debug("Executed updatePersonName(" + personId + ", " + name + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on updatePersonName(" + personId + ", " + name + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling updatePersonName(" + personId + ", " + name + ")");
			return delegate.updatePersonName(personId, name);
		}
		else {
			return delegate.updatePersonName(personId, name);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonDetails updatePersonAddress(ca.magex.crm.api.system.Identifier personId, ca.magex.crm.api.common.MailingAddress address) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling updatePersonAddress(" + personId + ", " + address + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.updatePersonAddress(personId, address);
				logger.trace("Executed updatePersonAddress(" + personId + ", " + address + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on updatePersonAddress(" + personId + ", " + address + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling updatePersonAddress(" + personId + ", " + address + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.updatePersonAddress(personId, address);
				logger.debug("Executed updatePersonAddress(" + personId + ", " + address + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on updatePersonAddress(" + personId + ", " + address + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling updatePersonAddress(" + personId + ", " + address + ")");
			return delegate.updatePersonAddress(personId, address);
		}
		else {
			return delegate.updatePersonAddress(personId, address);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonDetails updatePersonCommunication(ca.magex.crm.api.system.Identifier personId, ca.magex.crm.api.common.Communication communication) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling updatePersonCommunication(" + personId + ", " + communication + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.updatePersonCommunication(personId, communication);
				logger.trace("Executed updatePersonCommunication(" + personId + ", " + communication + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on updatePersonCommunication(" + personId + ", " + communication + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling updatePersonCommunication(" + personId + ", " + communication + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.updatePersonCommunication(personId, communication);
				logger.debug("Executed updatePersonCommunication(" + personId + ", " + communication + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on updatePersonCommunication(" + personId + ", " + communication + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling updatePersonCommunication(" + personId + ", " + communication + ")");
			return delegate.updatePersonCommunication(personId, communication);
		}
		else {
			return delegate.updatePersonCommunication(personId, communication);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonDetails updatePersonBusinessPosition(ca.magex.crm.api.system.Identifier personId, ca.magex.crm.api.common.BusinessPosition position) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling updatePersonBusinessPosition(" + personId + ", " + position + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.updatePersonBusinessPosition(personId, position);
				logger.trace("Executed updatePersonBusinessPosition(" + personId + ", " + position + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on updatePersonBusinessPosition(" + personId + ", " + position + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling updatePersonBusinessPosition(" + personId + ", " + position + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.updatePersonBusinessPosition(personId, position);
				logger.debug("Executed updatePersonBusinessPosition(" + personId + ", " + position + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on updatePersonBusinessPosition(" + personId + ", " + position + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling updatePersonBusinessPosition(" + personId + ", " + position + ")");
			return delegate.updatePersonBusinessPosition(personId, position);
		}
		else {
			return delegate.updatePersonBusinessPosition(personId, position);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonSummary findPersonSummary(ca.magex.crm.api.system.Identifier personId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findPersonSummary(" + personId + ")");
				ca.magex.crm.api.crm.PersonSummary result = delegate.findPersonSummary(personId);
				logger.trace("Executed findPersonSummary(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findPersonSummary(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findPersonSummary(" + personId + ")");
				ca.magex.crm.api.crm.PersonSummary result = delegate.findPersonSummary(personId);
				logger.debug("Executed findPersonSummary(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findPersonSummary(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findPersonSummary(" + personId + ")");
			return delegate.findPersonSummary(personId);
		}
		else {
			return delegate.findPersonSummary(personId);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonDetails findPersonDetails(ca.magex.crm.api.system.Identifier personId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findPersonDetails(" + personId + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.findPersonDetails(personId);
				logger.trace("Executed findPersonDetails(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findPersonDetails(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findPersonDetails(" + personId + ")");
				ca.magex.crm.api.crm.PersonDetails result = delegate.findPersonDetails(personId);
				logger.debug("Executed findPersonDetails(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findPersonDetails(" + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findPersonDetails(" + personId + ")");
			return delegate.findPersonDetails(personId);
		}
		else {
			return delegate.findPersonDetails(personId);
		}
	}
	
	@Override
	public long countPersons(ca.magex.crm.api.filters.PersonsFilter filter) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling countPersons(" + filter + ")");
				long result = delegate.countPersons(filter);
				logger.trace("Executed countPersons(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on countPersons(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling countPersons(" + filter + ")");
				long result = delegate.countPersons(filter);
				logger.debug("Executed countPersons(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on countPersons(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling countPersons(" + filter + ")");
			return delegate.countPersons(filter);
		}
		else {
			return delegate.countPersons(filter);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonSummary> findPersonSummaries(ca.magex.crm.api.filters.PersonsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findPersonSummaries(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonSummary> result = delegate.findPersonSummaries(filter, paging);
				logger.trace("Executed findPersonSummaries(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findPersonSummaries(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findPersonSummaries(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonSummary> result = delegate.findPersonSummaries(filter, paging);
				logger.debug("Executed findPersonSummaries(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findPersonSummaries(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findPersonSummaries(" + filter + ", " + paging + ")");
			return delegate.findPersonSummaries(filter, paging);
		}
		else {
			return delegate.findPersonSummaries(filter, paging);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonDetails> findPersonDetails(ca.magex.crm.api.filters.PersonsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findPersonDetails(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonDetails> result = delegate.findPersonDetails(filter, paging);
				logger.trace("Executed findPersonDetails(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findPersonDetails(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findPersonDetails(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonDetails> result = delegate.findPersonDetails(filter, paging);
				logger.debug("Executed findPersonDetails(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findPersonDetails(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findPersonDetails(" + filter + ", " + paging + ")");
			return delegate.findPersonDetails(filter, paging);
		}
		else {
			return delegate.findPersonDetails(filter, paging);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonDetails> findPersonDetails(ca.magex.crm.api.filters.PersonsFilter filter) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findPersonDetails(" + filter + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonDetails> result = delegate.findPersonDetails(filter);
				logger.trace("Executed findPersonDetails(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findPersonDetails(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findPersonDetails(" + filter + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonDetails> result = delegate.findPersonDetails(filter);
				logger.debug("Executed findPersonDetails(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findPersonDetails(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findPersonDetails(" + filter + ")");
			return delegate.findPersonDetails(filter);
		}
		else {
			return delegate.findPersonDetails(filter);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonSummary> findPersonSummaries(ca.magex.crm.api.filters.PersonsFilter filter) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findPersonSummaries(" + filter + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonSummary> result = delegate.findPersonSummaries(filter);
				logger.trace("Executed findPersonSummaries(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findPersonSummaries(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findPersonSummaries(" + filter + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonSummary> result = delegate.findPersonSummaries(filter);
				logger.debug("Executed findPersonSummaries(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findPersonSummaries(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findPersonSummaries(" + filter + ")");
			return delegate.findPersonSummaries(filter);
		}
		else {
			return delegate.findPersonSummaries(filter);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonSummary> findActivePersonSummariesForOrg(ca.magex.crm.api.system.Identifier organizationId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findActivePersonSummariesForOrg(" + organizationId + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonSummary> result = delegate.findActivePersonSummariesForOrg(organizationId);
				logger.trace("Executed findActivePersonSummariesForOrg(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findActivePersonSummariesForOrg(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findActivePersonSummariesForOrg(" + organizationId + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonSummary> result = delegate.findActivePersonSummariesForOrg(organizationId);
				logger.debug("Executed findActivePersonSummariesForOrg(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findActivePersonSummariesForOrg(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findActivePersonSummariesForOrg(" + organizationId + ")");
			return delegate.findActivePersonSummariesForOrg(organizationId);
		}
		else {
			return delegate.findActivePersonSummariesForOrg(organizationId);
		}
	}
	
	@Override
	public ca.magex.crm.api.filters.PersonsFilter defaultPersonsFilter() {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling defaultPersonsFilter()");
				ca.magex.crm.api.filters.PersonsFilter result = delegate.defaultPersonsFilter();
				logger.trace("Executed defaultPersonsFilter() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on defaultPersonsFilter() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling defaultPersonsFilter()");
				ca.magex.crm.api.filters.PersonsFilter result = delegate.defaultPersonsFilter();
				logger.debug("Executed defaultPersonsFilter() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on defaultPersonsFilter() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling defaultPersonsFilter()");
			return delegate.defaultPersonsFilter();
		}
		else {
			return delegate.defaultPersonsFilter();
		}
	}
	
}
