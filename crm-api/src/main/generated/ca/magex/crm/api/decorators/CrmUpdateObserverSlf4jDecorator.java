package ca.magex.crm.api.decorators;

/**
 * AUTO-GENERATED: This file is auto-generated by ca.magex.json.javadoc.JavadocInterfaceAdapterBuilder
 * 
 * Logging and delegate decorators for the CRM services and policies
 * 
 * This class enables to you to inject nicely formatted slf4j logging onto any class you want.
 * <dl>
 *     <dd>TRACE</dd><dt>Log the method call with parameters including the result and execution time.</dt>
 *     <dd>DEBUG</dd><dt>Log the method call with parameters with the execution time.</dt>
 *     <dd>INFO</dd><dt>Log the method call with parameters.</dt>
 *     <dd>WARNING</dd><dt>No logging</dt>
 *     <dd>ERROR</dd><dt>No logging</dt>
 * </dl>
 * 
 * @author magex
 */
public class CrmUpdateObserverSlf4jDecorator implements ca.magex.crm.api.observer.CrmUpdateObserver {
	
	private ca.magex.crm.api.observer.CrmUpdateObserver delegate;
	
	private org.slf4j.Logger logger;
	
	public CrmUpdateObserverSlf4jDecorator(ca.magex.crm.api.observer.CrmUpdateObserver delegate, org.slf4j.Logger logger) {
		this.delegate = delegate;
		this.logger = logger;
	}
	
	@Override
	public ca.magex.crm.api.observer.CrmUpdateObserver lookupUpdated(Long timestamp, ca.magex.crm.api.system.Identifier lookupId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling lookupUpdated(" + timestamp + ", " + lookupId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.lookupUpdated(timestamp, lookupId);
				logger.trace("Executed lookupUpdated(" + timestamp + ", " + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on lookupUpdated(" + timestamp + ", " + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling lookupUpdated(" + timestamp + ", " + lookupId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.lookupUpdated(timestamp, lookupId);
				logger.debug("Executed lookupUpdated(" + timestamp + ", " + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on lookupUpdated(" + timestamp + ", " + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling lookupUpdated(" + timestamp + ", " + lookupId + ")");
			return delegate.lookupUpdated(timestamp, lookupId);
		}
		else {
			return delegate.lookupUpdated(timestamp, lookupId);
		}
	}
	
	@Override
	public ca.magex.crm.api.observer.CrmUpdateObserver optionUpdated(Long timestamp, ca.magex.crm.api.system.Identifier optionId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling optionUpdated(" + timestamp + ", " + optionId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.optionUpdated(timestamp, optionId);
				logger.trace("Executed optionUpdated(" + timestamp + ", " + optionId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on optionUpdated(" + timestamp + ", " + optionId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling optionUpdated(" + timestamp + ", " + optionId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.optionUpdated(timestamp, optionId);
				logger.debug("Executed optionUpdated(" + timestamp + ", " + optionId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on optionUpdated(" + timestamp + ", " + optionId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling optionUpdated(" + timestamp + ", " + optionId + ")");
			return delegate.optionUpdated(timestamp, optionId);
		}
		else {
			return delegate.optionUpdated(timestamp, optionId);
		}
	}
	
	@Override
	public ca.magex.crm.api.observer.CrmUpdateObserver groupUpdated(Long timestamp, ca.magex.crm.api.system.Identifier groupId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling groupUpdated(" + timestamp + ", " + groupId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.groupUpdated(timestamp, groupId);
				logger.trace("Executed groupUpdated(" + timestamp + ", " + groupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on groupUpdated(" + timestamp + ", " + groupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling groupUpdated(" + timestamp + ", " + groupId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.groupUpdated(timestamp, groupId);
				logger.debug("Executed groupUpdated(" + timestamp + ", " + groupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on groupUpdated(" + timestamp + ", " + groupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling groupUpdated(" + timestamp + ", " + groupId + ")");
			return delegate.groupUpdated(timestamp, groupId);
		}
		else {
			return delegate.groupUpdated(timestamp, groupId);
		}
	}
	
	@Override
	public ca.magex.crm.api.observer.CrmUpdateObserver roleUpdated(Long timestamp, ca.magex.crm.api.system.Identifier roleId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling roleUpdated(" + timestamp + ", " + roleId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.roleUpdated(timestamp, roleId);
				logger.trace("Executed roleUpdated(" + timestamp + ", " + roleId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on roleUpdated(" + timestamp + ", " + roleId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling roleUpdated(" + timestamp + ", " + roleId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.roleUpdated(timestamp, roleId);
				logger.debug("Executed roleUpdated(" + timestamp + ", " + roleId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on roleUpdated(" + timestamp + ", " + roleId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling roleUpdated(" + timestamp + ", " + roleId + ")");
			return delegate.roleUpdated(timestamp, roleId);
		}
		else {
			return delegate.roleUpdated(timestamp, roleId);
		}
	}
	
	@Override
	public ca.magex.crm.api.observer.CrmUpdateObserver organizationUpdated(Long timestamp, ca.magex.crm.api.system.Identifier organizationId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling organizationUpdated(" + timestamp + ", " + organizationId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.organizationUpdated(timestamp, organizationId);
				logger.trace("Executed organizationUpdated(" + timestamp + ", " + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on organizationUpdated(" + timestamp + ", " + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling organizationUpdated(" + timestamp + ", " + organizationId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.organizationUpdated(timestamp, organizationId);
				logger.debug("Executed organizationUpdated(" + timestamp + ", " + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on organizationUpdated(" + timestamp + ", " + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling organizationUpdated(" + timestamp + ", " + organizationId + ")");
			return delegate.organizationUpdated(timestamp, organizationId);
		}
		else {
			return delegate.organizationUpdated(timestamp, organizationId);
		}
	}
	
	@Override
	public ca.magex.crm.api.observer.CrmUpdateObserver locationUpdated(Long timestamp, ca.magex.crm.api.system.Identifier locationId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling locationUpdated(" + timestamp + ", " + locationId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.locationUpdated(timestamp, locationId);
				logger.trace("Executed locationUpdated(" + timestamp + ", " + locationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on locationUpdated(" + timestamp + ", " + locationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling locationUpdated(" + timestamp + ", " + locationId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.locationUpdated(timestamp, locationId);
				logger.debug("Executed locationUpdated(" + timestamp + ", " + locationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on locationUpdated(" + timestamp + ", " + locationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling locationUpdated(" + timestamp + ", " + locationId + ")");
			return delegate.locationUpdated(timestamp, locationId);
		}
		else {
			return delegate.locationUpdated(timestamp, locationId);
		}
	}
	
	@Override
	public ca.magex.crm.api.observer.CrmUpdateObserver personUpdated(Long timestamp, ca.magex.crm.api.system.Identifier personId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling personUpdated(" + timestamp + ", " + personId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.personUpdated(timestamp, personId);
				logger.trace("Executed personUpdated(" + timestamp + ", " + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on personUpdated(" + timestamp + ", " + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling personUpdated(" + timestamp + ", " + personId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.personUpdated(timestamp, personId);
				logger.debug("Executed personUpdated(" + timestamp + ", " + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on personUpdated(" + timestamp + ", " + personId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling personUpdated(" + timestamp + ", " + personId + ")");
			return delegate.personUpdated(timestamp, personId);
		}
		else {
			return delegate.personUpdated(timestamp, personId);
		}
	}
	
	@Override
	public ca.magex.crm.api.observer.CrmUpdateObserver userUpdated(Long timestamp, ca.magex.crm.api.system.Identifier userId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling userUpdated(" + timestamp + ", " + userId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.userUpdated(timestamp, userId);
				logger.trace("Executed userUpdated(" + timestamp + ", " + userId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on userUpdated(" + timestamp + ", " + userId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling userUpdated(" + timestamp + ", " + userId + ")");
				ca.magex.crm.api.observer.CrmUpdateObserver result = delegate.userUpdated(timestamp, userId);
				logger.debug("Executed userUpdated(" + timestamp + ", " + userId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on userUpdated(" + timestamp + ", " + userId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling userUpdated(" + timestamp + ", " + userId + ")");
			return delegate.userUpdated(timestamp, userId);
		}
		else {
			return delegate.userUpdated(timestamp, userId);
		}
	}
	
}
