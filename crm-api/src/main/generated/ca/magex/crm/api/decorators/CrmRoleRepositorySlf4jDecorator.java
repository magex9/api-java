package ca.magex.crm.api.decorators;

/**
 * AUTO-GENERATED: This file is auto-generated by ca.magex.json.javadoc.JavadocInterfaceAdapterBuilder
 * 
 * Logging and delegate decorators for the CRM services and policies
 * 
 * This class enables to you to inject nicely formatted slf4j logging onto any class you want.
 * <dl>
 *     <dd>TRACE</dd><dt>Log the method call with parameters including the result and execution time.</dt>
 *     <dd>DEBUG</dd><dt>Log the method call with parameters with the execution time.</dt>
 *     <dd>INFO</dd><dt>Log the method call with parameters.</dt>
 *     <dd>WARNING</dd><dt>No logging</dt>
 *     <dd>ERROR</dd><dt>No logging</dt>
 * </dl>
 * 
 * @author magex
 */
public class CrmRoleRepositorySlf4jDecorator implements ca.magex.crm.api.repositories.CrmRoleRepository {
	
	private ca.magex.crm.api.repositories.CrmRoleRepository delegate;
	
	private org.slf4j.Logger logger;
	
	public CrmRoleRepositorySlf4jDecorator(ca.magex.crm.api.repositories.CrmRoleRepository delegate, org.slf4j.Logger logger) {
		this.delegate = delegate;
		this.logger = logger;
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.roles.Role> findRoles(ca.magex.crm.api.filters.RolesFilter filter, ca.magex.crm.api.filters.Paging paging) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findRoles(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.roles.Role> result = delegate.findRoles(filter, paging);
				logger.trace("Executed findRoles(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findRoles(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findRoles(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.roles.Role> result = delegate.findRoles(filter, paging);
				logger.debug("Executed findRoles(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findRoles(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findRoles(" + filter + ", " + paging + ")");
			return delegate.findRoles(filter, paging);
		}
		else {
			return delegate.findRoles(filter, paging);
		}
	}
	
	@Override
	public long countRoles(ca.magex.crm.api.filters.RolesFilter filter) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling countRoles(" + filter + ")");
				long result = delegate.countRoles(filter);
				logger.trace("Executed countRoles(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on countRoles(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling countRoles(" + filter + ")");
				long result = delegate.countRoles(filter);
				logger.debug("Executed countRoles(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on countRoles(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling countRoles(" + filter + ")");
			return delegate.countRoles(filter);
		}
		else {
			return delegate.countRoles(filter);
		}
	}
	
	@Override
	public ca.magex.crm.api.roles.Role findRole(ca.magex.crm.api.system.Identifier roleId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findRole(" + roleId + ")");
				ca.magex.crm.api.roles.Role result = delegate.findRole(roleId);
				logger.trace("Executed findRole(" + roleId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findRole(" + roleId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findRole(" + roleId + ")");
				ca.magex.crm.api.roles.Role result = delegate.findRole(roleId);
				logger.debug("Executed findRole(" + roleId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findRole(" + roleId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findRole(" + roleId + ")");
			return delegate.findRole(roleId);
		}
		else {
			return delegate.findRole(roleId);
		}
	}
	
	@Override
	public ca.magex.crm.api.roles.Role saveRole(ca.magex.crm.api.roles.Role role) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling saveRole(" + role + ")");
				ca.magex.crm.api.roles.Role result = delegate.saveRole(role);
				logger.trace("Executed saveRole(" + role + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on saveRole(" + role + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling saveRole(" + role + ")");
				ca.magex.crm.api.roles.Role result = delegate.saveRole(role);
				logger.debug("Executed saveRole(" + role + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on saveRole(" + role + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling saveRole(" + role + ")");
			return delegate.saveRole(role);
		}
		else {
			return delegate.saveRole(role);
		}
	}
	
}
