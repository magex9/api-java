package ca.magex.crm.api.decorators;

/**
 * AUTO-GENERATED: This file is auto-generated by ca.magex.json.javadoc.JavadocInterfaceAdapterBuilder
 * 
 * Logging and delegate decorators for the CRM services and policies
 * 
 * This class enables to you to inject nicely formatted slf4j logging onto any class you want.
 * <dl>
 *     <dd>TRACE</dd><dt>Log the method call with parameters including the result and execution time.</dt>
 *     <dd>DEBUG</dd><dt>Log the method call with parameters with the execution time.</dt>
 *     <dd>INFO</dd><dt>Log the method call with parameters.</dt>
 *     <dd>WARNING</dd><dt>No logging</dt>
 *     <dd>ERROR</dd><dt>No logging</dt>
 * </dl>
 * 
 * @author magex
 */
public class CrmOrganizationPolicySlf4jDecorator implements ca.magex.crm.api.policies.CrmOrganizationPolicy {
	
	private ca.magex.crm.api.policies.CrmOrganizationPolicy delegate;
	
	private org.slf4j.Logger logger;
	
	public CrmOrganizationPolicySlf4jDecorator(ca.magex.crm.api.policies.CrmOrganizationPolicy delegate, org.slf4j.Logger logger) {
		this.delegate = delegate;
		this.logger = logger;
	}
	
	@Override
	public boolean canCreateOrganization() {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling canCreateOrganization()");
				boolean result = delegate.canCreateOrganization();
				logger.trace("Executed canCreateOrganization() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on canCreateOrganization() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling canCreateOrganization()");
				boolean result = delegate.canCreateOrganization();
				logger.debug("Executed canCreateOrganization() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on canCreateOrganization() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling canCreateOrganization()");
			return delegate.canCreateOrganization();
		}
		else {
			return delegate.canCreateOrganization();
		}
	}
	
	@Override
	public boolean canViewOrganization(ca.magex.crm.api.system.Identifier organizationId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling canViewOrganization(" + organizationId + ")");
				boolean result = delegate.canViewOrganization(organizationId);
				logger.trace("Executed canViewOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on canViewOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling canViewOrganization(" + organizationId + ")");
				boolean result = delegate.canViewOrganization(organizationId);
				logger.debug("Executed canViewOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on canViewOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling canViewOrganization(" + organizationId + ")");
			return delegate.canViewOrganization(organizationId);
		}
		else {
			return delegate.canViewOrganization(organizationId);
		}
	}
	
	@Override
	public boolean canUpdateOrganization(ca.magex.crm.api.system.Identifier organizationId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling canUpdateOrganization(" + organizationId + ")");
				boolean result = delegate.canUpdateOrganization(organizationId);
				logger.trace("Executed canUpdateOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on canUpdateOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling canUpdateOrganization(" + organizationId + ")");
				boolean result = delegate.canUpdateOrganization(organizationId);
				logger.debug("Executed canUpdateOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on canUpdateOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling canUpdateOrganization(" + organizationId + ")");
			return delegate.canUpdateOrganization(organizationId);
		}
		else {
			return delegate.canUpdateOrganization(organizationId);
		}
	}
	
	@Override
	public boolean canEnableOrganization(ca.magex.crm.api.system.Identifier organizationId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling canEnableOrganization(" + organizationId + ")");
				boolean result = delegate.canEnableOrganization(organizationId);
				logger.trace("Executed canEnableOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on canEnableOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling canEnableOrganization(" + organizationId + ")");
				boolean result = delegate.canEnableOrganization(organizationId);
				logger.debug("Executed canEnableOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on canEnableOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling canEnableOrganization(" + organizationId + ")");
			return delegate.canEnableOrganization(organizationId);
		}
		else {
			return delegate.canEnableOrganization(organizationId);
		}
	}
	
	@Override
	public boolean canDisableOrganization(ca.magex.crm.api.system.Identifier organizationId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling canDisableOrganization(" + organizationId + ")");
				boolean result = delegate.canDisableOrganization(organizationId);
				logger.trace("Executed canDisableOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on canDisableOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling canDisableOrganization(" + organizationId + ")");
				boolean result = delegate.canDisableOrganization(organizationId);
				logger.debug("Executed canDisableOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on canDisableOrganization(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling canDisableOrganization(" + organizationId + ")");
			return delegate.canDisableOrganization(organizationId);
		}
		else {
			return delegate.canDisableOrganization(organizationId);
		}
	}
	
}
