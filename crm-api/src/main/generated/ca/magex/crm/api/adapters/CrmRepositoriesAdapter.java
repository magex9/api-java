package ca.magex.crm.api.adapters;

/**
 * AUTO-GENERATED: This file is auto-generated by ca.magex.json.javadoc.JavadocInterfaceAdapterBuilder
 * 
 * Aggregate adapter for all the CRM repositories
 */
public class CrmRepositoriesAdapter implements ca.magex.crm.api.repositories.CrmConfigurationRepository, ca.magex.crm.api.repositories.CrmLookupRepository, ca.magex.crm.api.repositories.CrmOptionRepository, ca.magex.crm.api.repositories.CrmGroupRepository, ca.magex.crm.api.repositories.CrmRoleRepository, ca.magex.crm.api.repositories.CrmOrganizationRepository, ca.magex.crm.api.repositories.CrmLocationRepository, ca.magex.crm.api.repositories.CrmPersonRepository, ca.magex.crm.api.repositories.CrmUserRepository {
	
	protected ca.magex.crm.api.repositories.CrmConfigurationRepository crmConfigurationRepository;
	
	protected ca.magex.crm.api.repositories.CrmLookupRepository crmLookupRepository;
	
	protected ca.magex.crm.api.repositories.CrmOptionRepository crmOptionRepository;
	
	protected ca.magex.crm.api.repositories.CrmGroupRepository crmGroupRepository;
	
	protected ca.magex.crm.api.repositories.CrmRoleRepository crmRoleRepository;
	
	protected ca.magex.crm.api.repositories.CrmOrganizationRepository crmOrganizationRepository;
	
	protected ca.magex.crm.api.repositories.CrmLocationRepository crmLocationRepository;
	
	protected ca.magex.crm.api.repositories.CrmPersonRepository crmPersonRepository;
	
	protected ca.magex.crm.api.repositories.CrmUserRepository crmUserRepository;
	
	public CrmRepositoriesAdapter(ca.magex.crm.api.repositories.CrmConfigurationRepository crmConfigurationRepository, ca.magex.crm.api.repositories.CrmLookupRepository crmLookupRepository, ca.magex.crm.api.repositories.CrmOptionRepository crmOptionRepository, ca.magex.crm.api.repositories.CrmGroupRepository crmGroupRepository, ca.magex.crm.api.repositories.CrmRoleRepository crmRoleRepository, ca.magex.crm.api.repositories.CrmOrganizationRepository crmOrganizationRepository, ca.magex.crm.api.repositories.CrmLocationRepository crmLocationRepository, ca.magex.crm.api.repositories.CrmPersonRepository crmPersonRepository, ca.magex.crm.api.repositories.CrmUserRepository crmUserRepository) {
		this.crmConfigurationRepository = crmConfigurationRepository;
		this.crmLookupRepository = crmLookupRepository;
		this.crmOptionRepository = crmOptionRepository;
		this.crmGroupRepository = crmGroupRepository;
		this.crmRoleRepository = crmRoleRepository;
		this.crmOrganizationRepository = crmOrganizationRepository;
		this.crmLocationRepository = crmLocationRepository;
		this.crmPersonRepository = crmPersonRepository;
		this.crmUserRepository = crmUserRepository;
	}
	
	@Override
	public ca.magex.crm.api.system.Identifier generateId() {
		return crmConfigurationRepository.generateId();
	}
	
	@Override
	public boolean isInitialized() {
		return crmConfigurationRepository.isInitialized();
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.system.Lookup> findLookups(ca.magex.crm.api.filters.LookupsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		return crmLookupRepository.findLookups(filter, paging);
	}
	
	@Override
	public long countLookups(ca.magex.crm.api.filters.LookupsFilter filter) {
		return crmLookupRepository.countLookups(filter);
	}
	
	@Override
	public ca.magex.crm.api.system.Lookup findLookup(ca.magex.crm.api.system.Identifier lookupId) {
		return crmLookupRepository.findLookup(lookupId);
	}
	
	@Override
	public ca.magex.crm.api.system.Lookup saveLookup(ca.magex.crm.api.system.Lookup lookup) {
		return crmLookupRepository.saveLookup(lookup);
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.system.Option> findOptions(ca.magex.crm.api.filters.OptionsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		return crmOptionRepository.findOptions(filter, paging);
	}
	
	@Override
	public long countOptions(ca.magex.crm.api.filters.OptionsFilter filter) {
		return crmOptionRepository.countOptions(filter);
	}
	
	@Override
	public ca.magex.crm.api.system.Option findOption(ca.magex.crm.api.system.Identifier lookupId) {
		return crmOptionRepository.findOption(lookupId);
	}
	
	@Override
	public ca.magex.crm.api.system.Option saveOption(ca.magex.crm.api.system.Option lookup) {
		return crmOptionRepository.saveOption(lookup);
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.roles.Group> findGroups(ca.magex.crm.api.filters.GroupsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		return crmGroupRepository.findGroups(filter, paging);
	}
	
	@Override
	public long countGroups(ca.magex.crm.api.filters.GroupsFilter filter) {
		return crmGroupRepository.countGroups(filter);
	}
	
	@Override
	public ca.magex.crm.api.roles.Group findGroup(ca.magex.crm.api.system.Identifier groupId) {
		return crmGroupRepository.findGroup(groupId);
	}
	
	@Override
	public ca.magex.crm.api.roles.Group saveGroup(ca.magex.crm.api.roles.Group group) {
		return crmGroupRepository.saveGroup(group);
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.roles.Role> findRoles(ca.magex.crm.api.filters.RolesFilter filter, ca.magex.crm.api.filters.Paging paging) {
		return crmRoleRepository.findRoles(filter, paging);
	}
	
	@Override
	public long countRoles(ca.magex.crm.api.filters.RolesFilter filter) {
		return crmRoleRepository.countRoles(filter);
	}
	
	@Override
	public ca.magex.crm.api.roles.Role findRole(ca.magex.crm.api.system.Identifier roleId) {
		return crmRoleRepository.findRole(roleId);
	}
	
	@Override
	public ca.magex.crm.api.roles.Role saveRole(ca.magex.crm.api.roles.Role role) {
		return crmRoleRepository.saveRole(role);
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.OrganizationDetails> findOrganizationDetails(ca.magex.crm.api.filters.OrganizationsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		return crmOrganizationRepository.findOrganizationDetails(filter, paging);
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.OrganizationSummary> findOrganizationSummary(ca.magex.crm.api.filters.OrganizationsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		return crmOrganizationRepository.findOrganizationSummary(filter, paging);
	}
	
	@Override
	public long countOrganizations(ca.magex.crm.api.filters.OrganizationsFilter filter) {
		return crmOrganizationRepository.countOrganizations(filter);
	}
	
	@Override
	public ca.magex.crm.api.crm.OrganizationDetails findOrganizationDetails(ca.magex.crm.api.system.Identifier organizationId) {
		return crmOrganizationRepository.findOrganizationDetails(organizationId);
	}
	
	@Override
	public ca.magex.crm.api.crm.OrganizationSummary findOrganizationSummary(ca.magex.crm.api.system.Identifier organizationId) {
		return crmOrganizationRepository.findOrganizationSummary(organizationId);
	}
	
	@Override
	public ca.magex.crm.api.crm.OrganizationDetails saveOrganizationDetails(ca.magex.crm.api.crm.OrganizationDetails organization) {
		return crmOrganizationRepository.saveOrganizationDetails(organization);
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.LocationDetails> findLocationDetails(ca.magex.crm.api.filters.LocationsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		return crmLocationRepository.findLocationDetails(filter, paging);
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.LocationSummary> findLocationSummary(ca.magex.crm.api.filters.LocationsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		return crmLocationRepository.findLocationSummary(filter, paging);
	}
	
	@Override
	public long countLocations(ca.magex.crm.api.filters.LocationsFilter filter) {
		return crmLocationRepository.countLocations(filter);
	}
	
	@Override
	public ca.magex.crm.api.crm.LocationDetails findLocationDetails(ca.magex.crm.api.system.Identifier locationId) {
		return crmLocationRepository.findLocationDetails(locationId);
	}
	
	@Override
	public ca.magex.crm.api.crm.LocationSummary findLocationSummary(ca.magex.crm.api.system.Identifier locationId) {
		return crmLocationRepository.findLocationSummary(locationId);
	}
	
	@Override
	public ca.magex.crm.api.crm.LocationDetails saveLocationDetails(ca.magex.crm.api.crm.LocationDetails location) {
		return crmLocationRepository.saveLocationDetails(location);
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonDetails> findPersonDetails(ca.magex.crm.api.filters.PersonsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		return crmPersonRepository.findPersonDetails(filter, paging);
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.PersonSummary> findPersonSummary(ca.magex.crm.api.filters.PersonsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		return crmPersonRepository.findPersonSummary(filter, paging);
	}
	
	@Override
	public long countPersons(ca.magex.crm.api.filters.PersonsFilter filter) {
		return crmPersonRepository.countPersons(filter);
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonDetails findPersonDetails(ca.magex.crm.api.system.Identifier personId) {
		return crmPersonRepository.findPersonDetails(personId);
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonSummary findPersonSummary(ca.magex.crm.api.system.Identifier personId) {
		return crmPersonRepository.findPersonSummary(personId);
	}
	
	@Override
	public ca.magex.crm.api.crm.PersonDetails savePersonDetails(ca.magex.crm.api.crm.PersonDetails person) {
		return crmPersonRepository.savePersonDetails(person);
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.roles.User> findUsers(ca.magex.crm.api.filters.UsersFilter filter, ca.magex.crm.api.filters.Paging paging) {
		return crmUserRepository.findUsers(filter, paging);
	}
	
	@Override
	public long countUsers(ca.magex.crm.api.filters.UsersFilter filter) {
		return crmUserRepository.countUsers(filter);
	}
	
	@Override
	public ca.magex.crm.api.roles.User findUser(ca.magex.crm.api.system.Identifier userId) {
		return crmUserRepository.findUser(userId);
	}
	
	@Override
	public ca.magex.crm.api.roles.User saveUser(ca.magex.crm.api.roles.User user) {
		return crmUserRepository.saveUser(user);
	}
	
}
