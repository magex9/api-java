package ca.magex.crm.api.decorators;

/**
 * AUTO-GENERATED: This file is auto-generated by ca.magex.json.javadoc.JavadocInterfaceAdapterBuilder
 * 
 * Logging and delegate decorators for the CRM services and policies
 * 
 * This class enables to you to inject nicely formatted slf4j logging onto any class you want.
 * <dl>
 *     <dd>TRACE</dd><dt>Log the method call with parameters including the result and execution time.</dt>
 *     <dd>DEBUG</dd><dt>Log the method call with parameters with the execution time.</dt>
 *     <dd>INFO</dd><dt>Log the method call with parameters.</dt>
 *     <dd>WARNING</dd><dt>No logging</dt>
 *     <dd>ERROR</dd><dt>No logging</dt>
 * </dl>
 * 
 * @author magex
 */
public class CrmOrganizationRepositorySlf4jDecorator implements ca.magex.crm.api.repositories.CrmOrganizationRepository {
	
	private ca.magex.crm.api.repositories.CrmOrganizationRepository delegate;
	
	private org.slf4j.Logger logger;
	
	public CrmOrganizationRepositorySlf4jDecorator(ca.magex.crm.api.repositories.CrmOrganizationRepository delegate, org.slf4j.Logger logger) {
		this.delegate = delegate;
		this.logger = logger;
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.OrganizationDetails> findOrganizationDetails(ca.magex.crm.api.filters.OrganizationsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findOrganizationDetails(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.OrganizationDetails> result = delegate.findOrganizationDetails(filter, paging);
				logger.trace("Executed findOrganizationDetails(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findOrganizationDetails(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findOrganizationDetails(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.OrganizationDetails> result = delegate.findOrganizationDetails(filter, paging);
				logger.debug("Executed findOrganizationDetails(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findOrganizationDetails(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findOrganizationDetails(" + filter + ", " + paging + ")");
			return delegate.findOrganizationDetails(filter, paging);
		}
		else {
			return delegate.findOrganizationDetails(filter, paging);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.OrganizationSummary> findOrganizationSummary(ca.magex.crm.api.filters.OrganizationsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findOrganizationSummary(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.OrganizationSummary> result = delegate.findOrganizationSummary(filter, paging);
				logger.trace("Executed findOrganizationSummary(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findOrganizationSummary(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findOrganizationSummary(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.crm.OrganizationSummary> result = delegate.findOrganizationSummary(filter, paging);
				logger.debug("Executed findOrganizationSummary(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findOrganizationSummary(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findOrganizationSummary(" + filter + ", " + paging + ")");
			return delegate.findOrganizationSummary(filter, paging);
		}
		else {
			return delegate.findOrganizationSummary(filter, paging);
		}
	}
	
	@Override
	public long countOrganizations(ca.magex.crm.api.filters.OrganizationsFilter filter) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling countOrganizations(" + filter + ")");
				long result = delegate.countOrganizations(filter);
				logger.trace("Executed countOrganizations(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on countOrganizations(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling countOrganizations(" + filter + ")");
				long result = delegate.countOrganizations(filter);
				logger.debug("Executed countOrganizations(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on countOrganizations(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling countOrganizations(" + filter + ")");
			return delegate.countOrganizations(filter);
		}
		else {
			return delegate.countOrganizations(filter);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.OrganizationDetails findOrganizationDetails(ca.magex.crm.api.system.Identifier organizationId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findOrganizationDetails(" + organizationId + ")");
				ca.magex.crm.api.crm.OrganizationDetails result = delegate.findOrganizationDetails(organizationId);
				logger.trace("Executed findOrganizationDetails(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findOrganizationDetails(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findOrganizationDetails(" + organizationId + ")");
				ca.magex.crm.api.crm.OrganizationDetails result = delegate.findOrganizationDetails(organizationId);
				logger.debug("Executed findOrganizationDetails(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findOrganizationDetails(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findOrganizationDetails(" + organizationId + ")");
			return delegate.findOrganizationDetails(organizationId);
		}
		else {
			return delegate.findOrganizationDetails(organizationId);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.OrganizationSummary findOrganizationSummary(ca.magex.crm.api.system.Identifier organizationId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findOrganizationSummary(" + organizationId + ")");
				ca.magex.crm.api.crm.OrganizationSummary result = delegate.findOrganizationSummary(organizationId);
				logger.trace("Executed findOrganizationSummary(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findOrganizationSummary(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findOrganizationSummary(" + organizationId + ")");
				ca.magex.crm.api.crm.OrganizationSummary result = delegate.findOrganizationSummary(organizationId);
				logger.debug("Executed findOrganizationSummary(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findOrganizationSummary(" + organizationId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findOrganizationSummary(" + organizationId + ")");
			return delegate.findOrganizationSummary(organizationId);
		}
		else {
			return delegate.findOrganizationSummary(organizationId);
		}
	}
	
	@Override
	public ca.magex.crm.api.crm.OrganizationDetails saveOrganizationDetails(ca.magex.crm.api.crm.OrganizationDetails organization) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling saveOrganizationDetails(" + organization + ")");
				ca.magex.crm.api.crm.OrganizationDetails result = delegate.saveOrganizationDetails(organization);
				logger.trace("Executed saveOrganizationDetails(" + organization + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on saveOrganizationDetails(" + organization + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling saveOrganizationDetails(" + organization + ")");
				ca.magex.crm.api.crm.OrganizationDetails result = delegate.saveOrganizationDetails(organization);
				logger.debug("Executed saveOrganizationDetails(" + organization + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on saveOrganizationDetails(" + organization + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling saveOrganizationDetails(" + organization + ")");
			return delegate.saveOrganizationDetails(organization);
		}
		else {
			return delegate.saveOrganizationDetails(organization);
		}
	}
	
}
