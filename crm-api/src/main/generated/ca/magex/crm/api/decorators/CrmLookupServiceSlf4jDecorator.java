package ca.magex.crm.api.decorators;

/**
 * AUTO-GENERATED: This file is auto-generated by ca.magex.json.javadoc.JavadocInterfaceAdapterBuilder
 * 
 * Logging and delegate decorators for the CRM services and policies
 * 
 * This class enables to you to inject nicely formatted slf4j logging onto any class you want.
 * <dl>
 *     <dd>TRACE</dd><dt>Log the method call with parameters including the result and execution time.</dt>
 *     <dd>DEBUG</dd><dt>Log the method call with parameters with the execution time.</dt>
 *     <dd>INFO</dd><dt>Log the method call with parameters.</dt>
 *     <dd>WARNING</dd><dt>No logging</dt>
 *     <dd>ERROR</dd><dt>No logging</dt>
 * </dl>
 * 
 * @author magex
 */
public class CrmLookupServiceSlf4jDecorator implements ca.magex.crm.api.services.CrmLookupService {
	
	private ca.magex.crm.api.services.CrmLookupService delegate;
	
	private org.slf4j.Logger logger;
	
	public CrmLookupServiceSlf4jDecorator(ca.magex.crm.api.services.CrmLookupService delegate, org.slf4j.Logger logger) {
		this.delegate = delegate;
		this.logger = logger;
	}
	
	@Override
	public ca.magex.crm.api.system.Lookup prototypeLookup(ca.magex.crm.api.system.Localized name, ca.magex.crm.api.system.Option parent) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling prototypeLookup(" + name + ", " + parent + ")");
				ca.magex.crm.api.system.Lookup result = delegate.prototypeLookup(name, parent);
				logger.trace("Executed prototypeLookup(" + name + ", " + parent + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on prototypeLookup(" + name + ", " + parent + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling prototypeLookup(" + name + ", " + parent + ")");
				ca.magex.crm.api.system.Lookup result = delegate.prototypeLookup(name, parent);
				logger.debug("Executed prototypeLookup(" + name + ", " + parent + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on prototypeLookup(" + name + ", " + parent + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling prototypeLookup(" + name + ", " + parent + ")");
			return delegate.prototypeLookup(name, parent);
		}
		else {
			return delegate.prototypeLookup(name, parent);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.Lookup createLookup(ca.magex.crm.api.system.Lookup lookup) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling createLookup(" + lookup + ")");
				ca.magex.crm.api.system.Lookup result = delegate.createLookup(lookup);
				logger.trace("Executed createLookup(" + lookup + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on createLookup(" + lookup + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling createLookup(" + lookup + ")");
				ca.magex.crm.api.system.Lookup result = delegate.createLookup(lookup);
				logger.debug("Executed createLookup(" + lookup + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on createLookup(" + lookup + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling createLookup(" + lookup + ")");
			return delegate.createLookup(lookup);
		}
		else {
			return delegate.createLookup(lookup);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.Lookup createLookup(ca.magex.crm.api.system.Localized name, ca.magex.crm.api.system.Option parent) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling createLookup(" + name + ", " + parent + ")");
				ca.magex.crm.api.system.Lookup result = delegate.createLookup(name, parent);
				logger.trace("Executed createLookup(" + name + ", " + parent + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on createLookup(" + name + ", " + parent + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling createLookup(" + name + ", " + parent + ")");
				ca.magex.crm.api.system.Lookup result = delegate.createLookup(name, parent);
				logger.debug("Executed createLookup(" + name + ", " + parent + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on createLookup(" + name + ", " + parent + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling createLookup(" + name + ", " + parent + ")");
			return delegate.createLookup(name, parent);
		}
		else {
			return delegate.createLookup(name, parent);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.Lookup findLookup(ca.magex.crm.api.system.Identifier lookupId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findLookup(" + lookupId + ")");
				ca.magex.crm.api.system.Lookup result = delegate.findLookup(lookupId);
				logger.trace("Executed findLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findLookup(" + lookupId + ")");
				ca.magex.crm.api.system.Lookup result = delegate.findLookup(lookupId);
				logger.debug("Executed findLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findLookup(" + lookupId + ")");
			return delegate.findLookup(lookupId);
		}
		else {
			return delegate.findLookup(lookupId);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.Lookup updateLookupName(ca.magex.crm.api.system.Identifier lookupId, ca.magex.crm.api.system.Localized name) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling updateLookupName(" + lookupId + ", " + name + ")");
				ca.magex.crm.api.system.Lookup result = delegate.updateLookupName(lookupId, name);
				logger.trace("Executed updateLookupName(" + lookupId + ", " + name + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on updateLookupName(" + lookupId + ", " + name + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling updateLookupName(" + lookupId + ", " + name + ")");
				ca.magex.crm.api.system.Lookup result = delegate.updateLookupName(lookupId, name);
				logger.debug("Executed updateLookupName(" + lookupId + ", " + name + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on updateLookupName(" + lookupId + ", " + name + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling updateLookupName(" + lookupId + ", " + name + ")");
			return delegate.updateLookupName(lookupId, name);
		}
		else {
			return delegate.updateLookupName(lookupId, name);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.Lookup findLookupByCode(String code) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findLookupByCode(" + code + ")");
				ca.magex.crm.api.system.Lookup result = delegate.findLookupByCode(code);
				logger.trace("Executed findLookupByCode(" + code + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findLookupByCode(" + code + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findLookupByCode(" + code + ")");
				ca.magex.crm.api.system.Lookup result = delegate.findLookupByCode(code);
				logger.debug("Executed findLookupByCode(" + code + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findLookupByCode(" + code + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findLookupByCode(" + code + ")");
			return delegate.findLookupByCode(code);
		}
		else {
			return delegate.findLookupByCode(code);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.Lookup findLookupByTypeWithParent(ca.magex.crm.api.system.Lookup parent) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findLookupByTypeWithParent(" + parent + ")");
				ca.magex.crm.api.system.Lookup result = delegate.findLookupByTypeWithParent(parent);
				logger.trace("Executed findLookupByTypeWithParent(" + parent + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findLookupByTypeWithParent(" + parent + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findLookupByTypeWithParent(" + parent + ")");
				ca.magex.crm.api.system.Lookup result = delegate.findLookupByTypeWithParent(parent);
				logger.debug("Executed findLookupByTypeWithParent(" + parent + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findLookupByTypeWithParent(" + parent + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findLookupByTypeWithParent(" + parent + ")");
			return delegate.findLookupByTypeWithParent(parent);
		}
		else {
			return delegate.findLookupByTypeWithParent(parent);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.Lookup enableLookup(ca.magex.crm.api.system.Identifier lookupId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling enableLookup(" + lookupId + ")");
				ca.magex.crm.api.system.Lookup result = delegate.enableLookup(lookupId);
				logger.trace("Executed enableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on enableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling enableLookup(" + lookupId + ")");
				ca.magex.crm.api.system.Lookup result = delegate.enableLookup(lookupId);
				logger.debug("Executed enableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on enableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling enableLookup(" + lookupId + ")");
			return delegate.enableLookup(lookupId);
		}
		else {
			return delegate.enableLookup(lookupId);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.Lookup disableLookup(ca.magex.crm.api.system.Identifier lookupId) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling disableLookup(" + lookupId + ")");
				ca.magex.crm.api.system.Lookup result = delegate.disableLookup(lookupId);
				logger.trace("Executed disableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on disableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling disableLookup(" + lookupId + ")");
				ca.magex.crm.api.system.Lookup result = delegate.disableLookup(lookupId);
				logger.debug("Executed disableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on disableLookup(" + lookupId + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling disableLookup(" + lookupId + ")");
			return delegate.disableLookup(lookupId);
		}
		else {
			return delegate.disableLookup(lookupId);
		}
	}
	
	@Override
	public ca.magex.crm.api.filters.LookupsFilter defaultLookupsFilter() {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling defaultLookupsFilter()");
				ca.magex.crm.api.filters.LookupsFilter result = delegate.defaultLookupsFilter();
				logger.trace("Executed defaultLookupsFilter() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on defaultLookupsFilter() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling defaultLookupsFilter()");
				ca.magex.crm.api.filters.LookupsFilter result = delegate.defaultLookupsFilter();
				logger.debug("Executed defaultLookupsFilter() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on defaultLookupsFilter() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling defaultLookupsFilter()");
			return delegate.defaultLookupsFilter();
		}
		else {
			return delegate.defaultLookupsFilter();
		}
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.system.Lookup> findLookups(ca.magex.crm.api.filters.LookupsFilter filter, ca.magex.crm.api.filters.Paging paging) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findLookups(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.system.Lookup> result = delegate.findLookups(filter, paging);
				logger.trace("Executed findLookups(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findLookups(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findLookups(" + filter + ", " + paging + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.system.Lookup> result = delegate.findLookups(filter, paging);
				logger.debug("Executed findLookups(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findLookups(" + filter + ", " + paging + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findLookups(" + filter + ", " + paging + ")");
			return delegate.findLookups(filter, paging);
		}
		else {
			return delegate.findLookups(filter, paging);
		}
	}
	
	@Override
	public ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.system.Lookup> findLookups(ca.magex.crm.api.filters.LookupsFilter filter) {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling findLookups(" + filter + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.system.Lookup> result = delegate.findLookups(filter);
				logger.trace("Executed findLookups(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on findLookups(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling findLookups(" + filter + ")");
				ca.magex.crm.api.system.FilteredPage<ca.magex.crm.api.system.Lookup> result = delegate.findLookups(filter);
				logger.debug("Executed findLookups(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on findLookups(" + filter + ") in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling findLookups(" + filter + ")");
			return delegate.findLookups(filter);
		}
		else {
			return delegate.findLookups(filter);
		}
	}
	
	@Override
	public ca.magex.crm.api.filters.Paging defaultLookupPaging() {
		if (logger.isTraceEnabled()) {
			long start = System.nanoTime();
			try {
				logger.trace("Calling defaultLookupPaging()");
				ca.magex.crm.api.filters.Paging result = delegate.defaultLookupPaging();
				logger.trace("Executed defaultLookupPaging() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + "returnType" + ": " + result + ").");
				return result;
			}
			catch (Exception e) {
				logger.trace("Exception on defaultLookupPaging() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isDebugEnabled()) {
			long start = System.nanoTime();
			try {
				logger.debug("Calling defaultLookupPaging()");
				ca.magex.crm.api.filters.Paging result = delegate.defaultLookupPaging();
				logger.debug("Executed defaultLookupPaging() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + ".");
				return result;
			}
			catch (Exception e) {
				logger.debug("Exception on defaultLookupPaging() in " + java.time.Duration.ofNanos(System.nanoTime() - start) + " (" + e.getClass() + ": " + e.getMessage() + ").");
				throw e;
			}
		}
		else if (logger.isInfoEnabled()) {
			logger.info("Calling defaultLookupPaging()");
			return delegate.defaultLookupPaging();
		}
		else {
			return delegate.defaultLookupPaging();
		}
	}
	
}
