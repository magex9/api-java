{
  "name": "BasicOrganizationService",
  "package": "ca.magex.crm.api.services.basic",
  "imports": {
    "List": "java.util",
    "OrganizationDetails": "ca.magex.crm.api.crm",
    "OrganizationSummary": "ca.magex.crm.api.crm",
    "OrganizationsFilter": "ca.magex.crm.api.filters",
    "Paging": "ca.magex.crm.api.filters",
    "CrmRepositories": "ca.magex.crm.api.repositories",
    "CrmOrganizationService": "ca.magex.crm.api.services",
    "FilteredPage": "ca.magex.crm.api.system",
    "Identifier": "ca.magex.crm.api.system",
    "Status": "ca.magex.crm.api.system"
  },
  "type": "class",
  "modifiers": ["public"],
  "implements": ["CrmOrganizationService"],
  "constructors": [{
    "name": "BasicOrganizationService",
    "modifiers": ["public"],
    "parameters": [{
      "name": "repos",
      "type": "CrmRepositories"
    }],
    "body": "{\n    this.repos = repos;\n}"
  }],
  "fields": [{
    "name": "repos",
    "modifiers": ["private"],
    "type": "CrmRepositories"
  }],
  "methods": [
    {
      "name": "createOrganization",
      "modifiers": ["public"],
      "type": "OrganizationDetails",
      "parameters": [
        {
          "name": "organizationDisplayName",
          "type": "String"
        },
        {
          "name": "groups",
          "type": {
            "class": "List",
            "generics": ["String"]
          }
        }
      ],
      "body": "{\n    return repos.saveOrganizationDetails(new OrganizationDetails(repos.generateId(), Status.ACTIVE, organizationDisplayName, null, null, groups));\n}"
    },
    {
      "name": "enableOrganization",
      "modifiers": ["public"],
      "type": "OrganizationSummary",
      "parameters": [{
        "name": "organizationId",
        "type": "Identifier"
      }],
      "body": "{\n    OrganizationDetails details = findOrganizationDetails(organizationId);\n    if (details == null) {\n        return null;\n    }\n    return repos.saveOrganizationDetails(details.withStatus(Status.ACTIVE));\n}"
    },
    {
      "name": "disableOrganization",
      "modifiers": ["public"],
      "type": "OrganizationSummary",
      "parameters": [{
        "name": "organizationId",
        "type": "Identifier"
      }],
      "body": "{\n    OrganizationDetails details = findOrganizationDetails(organizationId);\n    if (details == null) {\n        return null;\n    }\n    return repos.saveOrganizationDetails(details.withStatus(Status.INACTIVE));\n}"
    },
    {
      "name": "updateOrganizationDisplayName",
      "modifiers": ["public"],
      "type": "OrganizationDetails",
      "parameters": [
        {
          "name": "organizationId",
          "type": "Identifier"
        },
        {
          "name": "name",
          "type": "String"
        }
      ],
      "body": "{\n    OrganizationDetails details = findOrganizationDetails(organizationId);\n    if (details == null) {\n        return null;\n    }\n    return repos.saveOrganizationDetails(details.withDisplayName(name));\n}"
    },
    {
      "name": "updateOrganizationMainLocation",
      "modifiers": ["public"],
      "type": "OrganizationDetails",
      "parameters": [
        {
          "name": "organizationId",
          "type": "Identifier"
        },
        {
          "name": "locationId",
          "type": "Identifier"
        }
      ],
      "body": "{\n    OrganizationDetails details = findOrganizationDetails(organizationId);\n    if (details == null) {\n        return null;\n    }\n    return repos.saveOrganizationDetails(details.withMainLocationId(locationId));\n}"
    },
    {
      "name": "updateOrganizationMainContact",
      "modifiers": ["public"],
      "type": "OrganizationDetails",
      "parameters": [
        {
          "name": "organizationId",
          "type": "Identifier"
        },
        {
          "name": "personId",
          "type": "Identifier"
        }
      ],
      "body": "{\n    OrganizationDetails details = findOrganizationDetails(organizationId);\n    if (details == null) {\n        return null;\n    }\n    return repos.saveOrganizationDetails(details.withMainContactId(personId));\n}"
    },
    {
      "name": "updateOrganizationGroups",
      "modifiers": ["public"],
      "type": "OrganizationDetails",
      "parameters": [
        {
          "name": "organizationId",
          "type": "Identifier"
        },
        {
          "name": "groups",
          "type": {
            "class": "List",
            "generics": ["String"]
          }
        }
      ],
      "body": "{\n    OrganizationDetails details = findOrganizationDetails(organizationId);\n    if (details == null) {\n        return null;\n    }\n    return repos.saveOrganizationDetails(details.withGroups(groups));\n}"
    },
    {
      "name": "findOrganizationSummary",
      "modifiers": ["public"],
      "type": "OrganizationSummary",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "organizationId",
        "type": "Identifier"
      }],
      "body": "{\n    return repos.findOrganizationSummary(organizationId);\n}"
    },
    {
      "name": "findOrganizationDetails",
      "modifiers": ["public"],
      "type": "OrganizationDetails",
      "parameters": [{
        "name": "organizationId",
        "type": "Identifier"
      }],
      "body": "{\n    return repos.findOrganizationDetails(organizationId);\n}"
    },
    {
      "name": "countOrganizations",
      "modifiers": ["public"],
      "type": "long",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "filter",
        "type": "OrganizationsFilter"
      }],
      "body": "{\n    return repos.countOrganizations(filter);\n}"
    },
    {
      "name": "findOrganizationSummaries",
      "modifiers": ["public"],
      "type": {
        "class": "FilteredPage",
        "generics": ["OrganizationSummary"]
      },
      "parameters": [
        {
          "name": "filter",
          "type": "OrganizationsFilter"
        },
        {
          "name": "paging",
          "type": "Paging"
        }
      ],
      "body": "{\n    return repos.findOrganizationSummary(filter, paging);\n}"
    },
    {
      "name": "findOrganizationDetails",
      "modifiers": ["public"],
      "type": {
        "class": "FilteredPage",
        "generics": ["OrganizationDetails"]
      },
      "parameters": [
        {
          "name": "filter",
          "type": "OrganizationsFilter"
        },
        {
          "name": "paging",
          "type": "Paging"
        }
      ],
      "body": "{\n    return repos.findOrganizationDetails(filter, paging);\n}"
    }
  ]
}