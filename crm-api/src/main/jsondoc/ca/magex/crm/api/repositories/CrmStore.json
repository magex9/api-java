{
  "name": "CrmStore",
  "package": "ca.magex.crm.api.repositories",
  "imports": {
    "OutputStream": "java.io",
    "Serializable": "java.io",
    "Map": "java.util",
    "RandomStringUtils": "org.apache.commons.lang3",
    "LocationDetails": "ca.magex.crm.api.crm",
    "OrganizationDetails": "ca.magex.crm.api.crm",
    "PersonDetails": "ca.magex.crm.api.crm",
    "Group": "ca.magex.crm.api.roles",
    "Role": "ca.magex.crm.api.roles",
    "User": "ca.magex.crm.api.roles",
    "Identifier": "ca.magex.crm.api.system",
    "Lookup": "ca.magex.crm.api.system",
    "Option": "ca.magex.crm.api.system"
  },
  "type": "interface",
  "modifiers": ["public"],
  "fields": [{
    "name": "BASE_58",
    "modifiers": [
      "public",
      "static",
      "final"
    ],
    "type": "String"
  }],
  "methods": [
    {
      "name": "generateId",
      "modifiers": [
        "default",
        "public"
      ],
      "type": "Identifier",
      "parameters": [{
        "name": "type",
        "type": {
          "class": "Class",
          "generics": ["?"]
        }
      }],
      "body": "{\n    return new Identifier(RandomStringUtils.random(10, BASE_58));\n}"
    },
    {
      "name": "getConfigurations",
      "modifiers": ["public"],
      "type": {
        "class": "Map",
        "generics": [
          "Identifier",
          "Serializable"
        ]
      }
    },
    {
      "name": "getLookups",
      "modifiers": ["public"],
      "type": {
        "class": "Map",
        "generics": [
          "Identifier",
          "Lookup"
        ]
      }
    },
    {
      "name": "getOptions",
      "modifiers": ["public"],
      "type": {
        "class": "Map",
        "generics": [
          "Identifier",
          "Option"
        ]
      }
    },
    {
      "name": "getGroups",
      "modifiers": ["public"],
      "type": {
        "class": "Map",
        "generics": [
          "Identifier",
          "Group"
        ]
      }
    },
    {
      "name": "getRoles",
      "modifiers": ["public"],
      "type": {
        "class": "Map",
        "generics": [
          "Identifier",
          "Role"
        ]
      }
    },
    {
      "name": "getOrganizations",
      "modifiers": ["public"],
      "type": {
        "class": "Map",
        "generics": [
          "Identifier",
          "OrganizationDetails"
        ]
      }
    },
    {
      "name": "getLocations",
      "modifiers": ["public"],
      "type": {
        "class": "Map",
        "generics": [
          "Identifier",
          "LocationDetails"
        ]
      }
    },
    {
      "name": "getPersons",
      "modifiers": ["public"],
      "type": {
        "class": "Map",
        "generics": [
          "Identifier",
          "PersonDetails"
        ]
      }
    },
    {
      "name": "getUsers",
      "modifiers": ["public"],
      "type": {
        "class": "Map",
        "generics": [
          "Identifier",
          "User"
        ]
      }
    },
    {
      "name": "reset",
      "modifiers": [
        "default",
        "public"
      ],
      "body": "{\n    getConfigurations().clear();\n    getLookups().clear();\n    getOptions().clear();\n    getGroups().clear();\n    getRoles().clear();\n    getOrganizations().clear();\n    getLocations().clear();\n    getLocations().clear();\n    getUsers().clear();\n}"
    },
    {
      "name": "dump",
      "modifiers": [
        "default",
        "public"
      ],
      "parameters": [{
        "name": "os",
        "type": "OutputStream"
      }],
      "body": "{\n    dump(getConfigurations(), os);\n    dump(getLookups(), os);\n    dump(getOptions(), os);\n    dump(getGroups(), os);\n    dump(getRoles(), os);\n    dump(getOrganizations(), os);\n    dump(getLocations(), os);\n    dump(getLocations(), os);\n    dump(getUsers(), os);\n}"
    },
    {
      "name": "dump",
      "modifiers": [
        "public",
        "static"
      ],
      "parameters": [
        {
          "name": "map",
          "type": {
            "class": "Map",
            "generics": [
              "Identifier",
              "? extends Serializable"
            ]
          }
        },
        {
          "name": "os",
          "type": "OutputStream"
        }
      ],
      "body": "{\n    map.keySet().stream().sorted((x, y) -> x.toString().compareTo(y.toString())).forEach(key -> {\n        try {\n            os.write(new String(key + \" => \" + map.get(key) + \"\\n\").getBytes());\n        } catch (Exception e) {\n            throw new RuntimeException(e);\n        }\n    });\n}"
    }
  ]
}