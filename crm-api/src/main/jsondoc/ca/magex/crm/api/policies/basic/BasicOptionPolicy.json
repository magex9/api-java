{
  "name": "BasicOptionPolicy",
  "package": "ca.magex.crm.api.policies.basic",
  "imports": {
    "ItemNotFoundException": "ca.magex.crm.api.exceptions",
    "CrmOptionPolicy": "ca.magex.crm.api.policies",
    "CrmLookupService": "ca.magex.crm.api.services",
    "CrmOptionService": "ca.magex.crm.api.services",
    "Identifier": "ca.magex.crm.api.system",
    "Lookup": "ca.magex.crm.api.system",
    "Option": "ca.magex.crm.api.system",
    "Status": "ca.magex.crm.api.system"
  },
  "type": "class",
  "modifiers": ["public"],
  "implements": ["CrmOptionPolicy"],
  "constructors": [{
    "name": "BasicOptionPolicy",
    "description": "Basic Option Policy handles presence and status checks require for policy approval\n\n@param options",
    "modifiers": ["public"],
    "parameters": [
      {
        "name": "lookups",
        "type": "CrmLookupService"
      },
      {
        "name": "options",
        "type": "CrmOptionService"
      }
    ],
    "body": "{\n    this.lookups = lookups;\n    this.options = options;\n}"
  }],
  "fields": [
    {
      "name": "lookups",
      "modifiers": ["private"],
      "type": "CrmLookupService"
    },
    {
      "name": "options",
      "modifiers": ["private"],
      "type": "CrmOptionService"
    }
  ],
  "methods": [
    {
      "name": "canCreateOption",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "lookupId",
        "type": "Identifier"
      }],
      "body": "{\n    Lookup lookup = lookups.findLookup(lookupId);\n    /* can create a option for this lookup if it exists */\n    if (lookup == null) {\n        throw new ItemNotFoundException(\"Lookup ID '\" + lookupId + \"'\");\n    }\n    return lookup.isMutable();\n}"
    },
    {
      "name": "canViewOptions",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "lookupId",
        "type": "Identifier"
      }],
      "body": "{\n    /* can always view options */\n    return true;\n}"
    },
    {
      "name": "canViewOption",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "optionId",
        "type": "Identifier"
      }],
      "body": "{\n    /* can view a specific option if it exists */\n    if (options.findOption(optionId) == null) {\n        throw new ItemNotFoundException(\"Option ID '\" + optionId + \"'\");\n    }\n    return true;\n}"
    },
    {
      "name": "canUpdateOption",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "optionId",
        "type": "Identifier"
      }],
      "body": "{\n    /* can view a specific option if it exists and is active */\n    Option option = options.findOption(optionId);\n    if (option == null) {\n        throw new ItemNotFoundException(\"Option ID '\" + optionId + \"'\");\n    }\n    return options.findOption(optionId).getStatus() == Status.ACTIVE;\n}"
    },
    {
      "name": "canEnableOption",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "optionId",
        "type": "Identifier"
      }],
      "body": "{\n    /* can enable a specific option if it exists */\n    if (options.findOption(optionId) == null) {\n        throw new ItemNotFoundException(\"Option ID '\" + optionId + \"'\");\n    }\n    return true;\n}"
    },
    {
      "name": "canDisableOption",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "optionId",
        "type": "Identifier"
      }],
      "body": "{\n    /* can disable a specific option if it exists */\n    if (options.findOption(optionId) == null) {\n        throw new ItemNotFoundException(\"Option ID '\" + optionId + \"'\");\n    }\n    return true;\n}"
    }
  ]
}