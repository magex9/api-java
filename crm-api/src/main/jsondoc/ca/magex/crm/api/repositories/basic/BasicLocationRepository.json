{
  "name": "BasicLocationRepository",
  "package": "ca.magex.crm.api.repositories.basic",
  "imports": {
    "Collectors": "java.util.stream",
    "Stream": "java.util.stream",
    "SerializationUtils": "org.apache.commons.lang3",
    "LocationDetails": "ca.magex.crm.api.crm",
    "LocationSummary": "ca.magex.crm.api.crm",
    "LocationsFilter": "ca.magex.crm.api.filters",
    "PageBuilder": "ca.magex.crm.api.filters",
    "Paging": "ca.magex.crm.api.filters",
    "CrmUpdateNotifier": "ca.magex.crm.api.observer",
    "CrmLocationRepository": "ca.magex.crm.api.repositories",
    "CrmStore": "ca.magex.crm.api.repositories",
    "FilteredPage": "ca.magex.crm.api.system",
    "Identifier": "ca.magex.crm.api.system"
  },
  "type": "class",
  "modifiers": ["public"],
  "implements": ["CrmLocationRepository"],
  "constructors": [{
    "name": "BasicLocationRepository",
    "modifiers": ["public"],
    "parameters": [
      {
        "name": "store",
        "type": "CrmStore"
      },
      {
        "name": "notifier",
        "type": "CrmUpdateNotifier"
      }
    ],
    "body": "{\n    this.store = store;\n    this.notifier = notifier;\n}"
  }],
  "fields": [
    {
      "name": "store",
      "modifiers": ["private"],
      "type": "CrmStore"
    },
    {
      "name": "notifier",
      "modifiers": ["private"],
      "type": "CrmUpdateNotifier"
    }
  ],
  "methods": [
    {
      "name": "apply",
      "modifiers": ["private"],
      "type": {
        "class": "Stream",
        "generics": ["LocationDetails"]
      },
      "parameters": [{
        "name": "filter",
        "type": "LocationsFilter"
      }],
      "body": "{\n    return store.getLocations().values().stream().filter(p -> filter.apply(p));\n}"
    },
    {
      "name": "findLocationDetails",
      "modifiers": ["public"],
      "type": {
        "class": "FilteredPage",
        "generics": ["LocationDetails"]
      },
      "annotations": [{"name": "Override"}],
      "parameters": [
        {
          "name": "filter",
          "type": "LocationsFilter"
        },
        {
          "name": "paging",
          "type": "Paging"
        }
      ],
      "body": "{\n    return PageBuilder.buildPageFor(filter, apply(filter).map(i -> SerializationUtils.clone(i)).sorted(filter.getComparator(paging)).collect(Collectors.toList()), paging);\n}"
    },
    {
      "name": "findLocationSummary",
      "modifiers": ["public"],
      "type": {
        "class": "FilteredPage",
        "generics": ["LocationSummary"]
      },
      "annotations": [{"name": "Override"}],
      "parameters": [
        {
          "name": "filter",
          "type": "LocationsFilter"
        },
        {
          "name": "paging",
          "type": "Paging"
        }
      ],
      "body": "{\n    return PageBuilder.buildPageFor(filter, apply(filter).map(i -> SerializationUtils.clone(i)).sorted(filter.getComparator(paging)).collect(Collectors.toList()), paging);\n}"
    },
    {
      "name": "countLocations",
      "modifiers": ["public"],
      "type": "long",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "filter",
        "type": "LocationsFilter"
      }],
      "body": "{\n    return apply(filter).count();\n}"
    },
    {
      "name": "findLocationDetails",
      "modifiers": ["public"],
      "type": "LocationDetails",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "locationId",
        "type": "Identifier"
      }],
      "body": "{\n    return store.getLocations().get(locationId);\n}"
    },
    {
      "name": "findLocationSummary",
      "modifiers": ["public"],
      "type": "LocationSummary",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "locationId",
        "type": "Identifier"
      }],
      "body": "{\n    return findLocationDetails(locationId);\n}"
    },
    {
      "name": "saveLocationDetails",
      "modifiers": ["public"],
      "type": "LocationDetails",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "location",
        "type": "LocationDetails"
      }],
      "body": "{\n    notifier.locationUpdated(System.nanoTime(), location.getLocationId());\n    store.getLocations().put(location.getLocationId(), location);\n    return location;\n}"
    }
  ]
}