{
  "name": "BasicOrganizationPolicy",
  "package": "ca.magex.crm.api.policies.basic",
  "imports": {
    "OrganizationSummary": "ca.magex.crm.api.crm",
    "ItemNotFoundException": "ca.magex.crm.api.exceptions",
    "CrmOrganizationPolicy": "ca.magex.crm.api.policies",
    "CrmOrganizationService": "ca.magex.crm.api.services",
    "Identifier": "ca.magex.crm.api.system",
    "Status": "ca.magex.crm.api.system"
  },
  "type": "class",
  "modifiers": ["public"],
  "implements": ["CrmOrganizationPolicy"],
  "constructors": [{
    "name": "BasicOrganizationPolicy",
    "description": "Basic Organization Policy handles presence and status checks require for policy approval\n\n@param organizations",
    "modifiers": ["public"],
    "parameters": [{
      "name": "organizations",
      "type": "CrmOrganizationService"
    }],
    "body": "{\n    this.organizations = organizations;\n}"
  }],
  "fields": [{
    "name": "organizations",
    "modifiers": ["private"],
    "type": "CrmOrganizationService"
  }],
  "methods": [
    {
      "name": "canCreateOrganization",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "body": "{\n    /* always can create an organization */\n    return true;\n}"
    },
    {
      "name": "canViewOrganization",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "organizationId",
        "type": "Identifier"
      }],
      "body": "{\n    /* can only view an organization if it exists */\n    if (organizations.findOrganizationSummary(organizationId) == null) {\n        throw new ItemNotFoundException(\"Organization ID '\" + organizationId + \"'\");\n    }\n    return true;\n}"
    },
    {
      "name": "canUpdateOrganization",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "organizationId",
        "type": "Identifier"
      }],
      "body": "{\n    /* can only update an organization if it exists, and is active */\n    OrganizationSummary summary = organizations.findOrganizationSummary(organizationId);\n    if (summary == null) {\n        throw new ItemNotFoundException(\"Organization ID '\" + organizationId + \"'\");\n    }\n    return summary.getStatus() == Status.ACTIVE;\n}"
    },
    {
      "name": "canEnableOrganization",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "organizationId",
        "type": "Identifier"
      }],
      "body": "{\n    /* can only update an organization if it exists, and is active */\n    OrganizationSummary summary = organizations.findOrganizationSummary(organizationId);\n    if (summary == null) {\n        throw new ItemNotFoundException(\"Organization ID '\" + organizationId + \"'\");\n    }\n    return true;\n}"
    },
    {
      "name": "canDisableOrganization",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "organizationId",
        "type": "Identifier"
      }],
      "body": "{\n    /* can only update an organization if it exists, and is active */\n    OrganizationSummary summary = organizations.findOrganizationSummary(organizationId);\n    if (summary == null) {\n        throw new ItemNotFoundException(\"Organization ID '\" + organizationId + \"'\");\n    }\n    return true;\n}"
    }
  ]
}