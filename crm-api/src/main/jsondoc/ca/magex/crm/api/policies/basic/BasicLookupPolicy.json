{
  "name": "BasicLookupPolicy",
  "package": "ca.magex.crm.api.policies.basic",
  "imports": {
    "ItemNotFoundException": "ca.magex.crm.api.exceptions",
    "CrmLookupPolicy": "ca.magex.crm.api.policies",
    "CrmLookupService": "ca.magex.crm.api.services",
    "Identifier": "ca.magex.crm.api.system",
    "Lookup": "ca.magex.crm.api.system",
    "Status": "ca.magex.crm.api.system"
  },
  "type": "class",
  "modifiers": ["public"],
  "implements": ["CrmLookupPolicy"],
  "constructors": [{
    "name": "BasicLookupPolicy",
    "description": "Basic Lookup Policy handles presence and status checks require for policy approval\n\n@param organizations",
    "modifiers": ["public"],
    "parameters": [{
      "name": "lookups",
      "type": "CrmLookupService"
    }],
    "body": "{\n    this.lookups = lookups;\n}"
  }],
  "fields": [{
    "name": "lookups",
    "modifiers": ["private"],
    "type": "CrmLookupService"
  }],
  "methods": [
    {
      "name": "canCreateLookup",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "body": "{\n    // TODO should be able to create new business units and province lists.\n    // if (province or business unit sublist)\n    // return true;\n    return false;\n}"
    },
    {
      "name": "canViewLookup",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "lookup",
        "type": "String"
      }],
      "body": "{\n    /* can view a lookup if it exists */\n    if (lookups.findLookupByCode(lookup) == null) {\n        throw new ItemNotFoundException(\"Lookup Code '\" + lookup + \"'\");\n    }\n    return true;\n}"
    },
    {
      "name": "canViewLookup",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "lookupId",
        "type": "Identifier"
      }],
      "body": "{\n    /* can view a lookup if it exists */\n    if (lookups.findLookup(lookupId) == null) {\n        throw new ItemNotFoundException(\"Lookup ID '\" + lookupId + \"'\");\n    }\n    return true;\n}"
    },
    {
      "name": "canUpdateLookup",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "lookupId",
        "type": "Identifier"
      }],
      "body": "{\n    /* can update a lookup if it exists and is active */\n    Lookup lookup = lookups.findLookup(lookupId);\n    if (lookup == null) {\n        throw new ItemNotFoundException(\"Lookup ID '\" + lookupId + \"'\");\n    }\n    return lookup.getStatus() == Status.ACTIVE;\n}"
    },
    {
      "name": "canEnableLookup",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "lookupId",
        "type": "Identifier"
      }],
      "body": "{\n    /* can enable a lookup if it exists */\n    if (lookups.findLookup(lookupId) == null) {\n        throw new ItemNotFoundException(\"Lookup ID '\" + lookupId + \"'\");\n    }\n    return true;\n}"
    },
    {
      "name": "canDisableLookup",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "lookupId",
        "type": "Identifier"
      }],
      "body": "{\n    /* can disable a lookup if it exists */\n    if (lookups.findLookup(lookupId) == null) {\n        throw new ItemNotFoundException(\"Lookup ID '\" + lookupId + \"'\");\n    }\n    return true;\n}"
    }
  ]
}