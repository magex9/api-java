{
  "name": "Paging",
  "package": "ca.magex.crm.api.filters",
  "imports": {
    "Serializable": "java.io",
    "Collator": "java.text",
    "Comparator": "java.util",
    "Iterator": "java.util",
    "Locale": "java.util",
    "PropertyUtilsBean": "org.apache.commons.beanutils",
    "StringUtils": "org.apache.commons.lang3",
    "EqualsBuilder": "org.apache.commons.lang3.builder",
    "HashCodeBuilder": "org.apache.commons.lang3.builder",
    "ToStringBuilder": "org.apache.commons.lang3.builder",
    "ToStringStyle": "org.apache.commons.lang3.builder",
    "LoggerFactory": "org.slf4j",
    "Pageable": "org.springframework.data.domain",
    "Sort": "org.springframework.data.domain",
    "Order": "org.springframework.data.domain.Sort",
    "Crm": "ca.magex.crm.api",
    "ApiException": "ca.magex.crm.api.exceptions",
    "Lang": "ca.magex.crm.api.system",
    "Localized": "ca.magex.crm.api.system"
  },
  "type": "class",
  "modifiers": ["public"],
  "implements": [
    "Pageable",
    "Serializable"
  ],
  "constructors": [
    {
      "name": "Paging",
      "modifiers": ["public"],
      "parameters": [
        {
          "name": "pageNumber",
          "type": "int"
        },
        {
          "name": "pageSize",
          "type": "int"
        },
        {
          "name": "sort",
          "type": "Sort"
        }
      ],
      "body": "{\n    super();\n    // if we ask for a page before 1, return the first page\n    this.pageNumber = (pageNumber < 1 ? 1 : pageNumber);\n    this.pageSize = pageSize;\n    this.sort = sort;\n    /* calculate the offset */\n    this.offset = this.pageSize * (this.pageNumber - 1);\n}"
    },
    {
      "name": "Paging",
      "modifiers": ["public"],
      "parameters": [{
        "name": "sort",
        "type": "Sort"
      }],
      "body": "{\n    this(1, 10, sort);\n}"
    }
  ],
  "fields": [
    {
      "name": "offset",
      "modifiers": ["private"]
    },
    {
      "name": "pageSize",
      "modifiers": ["private"]
    },
    {
      "name": "pageNumber",
      "modifiers": ["private"]
    },
    {
      "name": "sort",
      "modifiers": ["private"],
      "type": "Sort"
    }
  ],
  "methods": [
    {
      "name": "singleInstance",
      "modifiers": [
        "public",
        "static"
      ],
      "type": "Paging",
      "body": "{\n    return new Paging(1, 1, Sort.unsorted());\n}"
    },
    {
      "name": "getPageNumber",
      "modifiers": ["public"],
      "type": "int",
      "annotations": [{"name": "Override"}],
      "body": "{\n    return pageNumber;\n}"
    },
    {
      "name": "withPageNumber",
      "modifiers": ["public"],
      "type": "Paging",
      "parameters": [{
        "name": "pageNumber",
        "type": "int"
      }],
      "body": "{\n    return new Paging(pageNumber, pageSize, sort);\n}"
    },
    {
      "name": "getPageSize",
      "modifiers": ["public"],
      "type": "int",
      "annotations": [{"name": "Override"}],
      "body": "{\n    return pageSize;\n}"
    },
    {
      "name": "withPageSize",
      "modifiers": ["public"],
      "type": "Paging",
      "parameters": [{
        "name": "pageSize",
        "type": "int"
      }],
      "body": "{\n    return new Paging(pageNumber, pageSize, sort);\n}"
    },
    {
      "name": "allItems",
      "modifiers": ["public"],
      "type": "Paging",
      "body": "{\n    return new Paging(1, Integer.MAX_VALUE, sort);\n}"
    },
    {
      "name": "getOffset",
      "modifiers": ["public"],
      "type": "long",
      "annotations": [{"name": "Override"}],
      "body": "{\n    return offset;\n}"
    },
    {
      "name": "getSort",
      "modifiers": ["public"],
      "type": "Sort",
      "annotations": [{"name": "Override"}],
      "body": "{\n    return sort;\n}"
    },
    {
      "name": "withSort",
      "modifiers": ["public"],
      "type": "Paging",
      "parameters": [{
        "name": "sort",
        "type": "Sort"
      }],
      "body": "{\n    return new Paging(pageNumber, pageSize, sort);\n}"
    },
    {
      "name": "hasPrevious",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "body": "{\n    return getPageNumber() > 1;\n}"
    },
    {
      "name": "next",
      "modifiers": ["public"],
      "type": "Paging",
      "annotations": [{"name": "Override"}],
      "body": "{\n    return new Paging(getPageNumber() + 1, getPageSize(), getSort());\n}"
    },
    {
      "name": "previousOrFirst",
      "modifiers": ["public"],
      "type": "Paging",
      "annotations": [{"name": "Override"}],
      "body": "{\n    return new Paging(getPageNumber() - 1, getPageSize(), getSort());\n}"
    },
    {
      "name": "first",
      "modifiers": ["public"],
      "type": "Paging",
      "annotations": [{"name": "Override"}],
      "body": "{\n    return new Paging(1, getPageSize(), getSort());\n}"
    },
    {
      "name": "hashCode",
      "modifiers": ["public"],
      "type": "int",
      "annotations": [{"name": "Override"}],
      "body": "{\n    return HashCodeBuilder.reflectionHashCode(this);\n}"
    },
    {
      "name": "equals",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "obj",
        "type": "Object"
      }],
      "body": "{\n    return EqualsBuilder.reflectionEquals(this, obj);\n}"
    },
    {
      "name": "toString",
      "modifiers": ["public"],
      "type": "String",
      "annotations": [{"name": "Override"}],
      "body": "{\n    return ToStringBuilder.reflectionToString(this, ToStringStyle.JSON_STYLE);\n}"
    }
  ]
}