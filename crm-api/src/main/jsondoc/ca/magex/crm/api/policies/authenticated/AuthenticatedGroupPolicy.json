{
  "name": "AuthenticatedGroupPolicy",
  "package": "ca.magex.crm.api.policies.authenticated",
  "imports": {
    "CRM_ADMIN": "ca.magex.crm.api.services.CrmAuthenticationService",
    "CrmGroupPolicy": "ca.magex.crm.api.policies",
    "BasicGroupPolicy": "ca.magex.crm.api.policies.basic",
    "CrmAuthenticationService": "ca.magex.crm.api.services",
    "CrmGroupService": "ca.magex.crm.api.services",
    "Identifier": "ca.magex.crm.api.system"
  },
  "type": "class",
  "modifiers": ["public"],
  "implements": ["CrmGroupPolicy"],
  "constructors": [{
    "name": "AuthenticatedGroupPolicy",
    "description": "Authenticated Group Policy handles roles and association checks required for policy approval\n\n@param auth\n@param permissions\n@param users",
    "modifiers": ["public"],
    "parameters": [
      {
        "name": "auth",
        "type": "CrmAuthenticationService"
      },
      {
        "name": "groups",
        "type": "CrmGroupService"
      }
    ],
    "body": "{\n    this.auth = auth;\n    this.delegate = new BasicGroupPolicy(groups);\n}"
  }],
  "fields": [
    {
      "name": "auth",
      "modifiers": ["private"],
      "type": "CrmAuthenticationService"
    },
    {
      "name": "delegate",
      "modifiers": ["private"],
      "type": "CrmGroupPolicy"
    }
  ],
  "methods": [
    {
      "name": "canCreateGroup",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "body": "{\n    if (!delegate.canCreateGroup()) {\n        return false;\n    }\n    /* only a CRM Admin can create a Group */\n    return auth.isUserInRole(CRM_ADMIN);\n}"
    },
    {
      "name": "canViewGroup",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "group",
        "type": "String"
      }],
      "body": "{\n    if (!delegate.canViewGroup(group)) {\n        return false;\n    }\n    /* anybody can view a group */\n    return true;\n}"
    },
    {
      "name": "canViewGroup",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "groupId",
        "type": "Identifier"
      }],
      "body": "{\n    if (!delegate.canViewGroup(groupId)) {\n        return false;\n    }\n    /* anybody can view a group */\n    return true;\n}"
    },
    {
      "name": "canUpdateGroup",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "groupId",
        "type": "Identifier"
      }],
      "body": "{\n    if (!delegate.canUpdateGroup(groupId)) {\n        return false;\n    }\n    /* only a CRM Admin can update a Group */\n    return auth.isUserInRole(CRM_ADMIN);\n}"
    },
    {
      "name": "canEnableGroup",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "groupId",
        "type": "Identifier"
      }],
      "body": "{\n    if (!delegate.canEnableGroup(groupId)) {\n        return false;\n    }\n    /* only a CRM Admin can enable a Group */\n    return auth.isUserInRole(CRM_ADMIN);\n}"
    },
    {
      "name": "canDisableGroup",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "groupId",
        "type": "Identifier"
      }],
      "body": "{\n    if (!delegate.canDisableGroup(groupId)) {\n        return false;\n    }\n    /* only a CRM Admin can disable a Group */\n    return auth.isUserInRole(CRM_ADMIN);\n}"
    }
  ]
}