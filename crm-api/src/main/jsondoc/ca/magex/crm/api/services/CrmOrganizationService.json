{
  "name": "CrmOrganizationService",
  "package": "ca.magex.crm.api.services",
  "description": "The CRM Organization service is used to manage organizations that are owned\nby business customers.\n\nThere are must be at least one organization in the system with the \"CRM\"\ngroup assigned to it in order to create and manage new organizations in the\nsystem. Organizations with the \"CRM\" group can then create users with the\n\"CRM_ADMIN\" role which will be able to manage the customers organizations.\nUsers in this org with the \"CRM_USER\" role will have some limited\nfunctionality to search and maintain some of the organization information.\n\nAll customer organizations should have the \"ORG\" group assigned to them in\norder to keep their own organization information up to date. There should be\none main location and one main contact that are used for communication\ninformation in case information needs to be mailed or an email / phone call\nis required to get information. All users with the \"ORG_ADMIN\" role will be\nable to keep their locations and persons up to date for their organization.\n\nNote that organizations are never deleted from the system just enabled and\ndisabled, so it is important to make sure that the organization does not\nalready exist in the system before creating a new one.\n\n@author scott",
  "imports": {
    "List": "java.util",
    "OrganizationDetails": "ca.magex.crm.api.crm",
    "OrganizationSummary": "ca.magex.crm.api.crm",
    "OrganizationsFilter": "ca.magex.crm.api.filters",
    "Paging": "ca.magex.crm.api.filters",
    "FilteredPage": "ca.magex.crm.api.system",
    "Identifier": "ca.magex.crm.api.system",
    "Status": "ca.magex.crm.api.system"
  },
  "type": "interface",
  "modifiers": ["public"],
  "methods": [
    {
      "name": "prototypeOrganization",
      "modifiers": ["default"],
      "type": "OrganizationDetails",
      "parameters": [
        {
          "name": "displayName",
          "type": "String"
        },
        {
          "name": "groups",
          "type": {
            "class": "List",
            "generics": ["String"]
          }
        }
      ],
      "body": "{\n    return new OrganizationDetails(null, Status.PENDING, displayName, null, null, groups);\n}"
    },
    {
      "name": "createOrganization",
      "modifiers": ["default"],
      "type": "OrganizationDetails",
      "parameters": [{
        "name": "prototype",
        "type": "OrganizationDetails"
      }],
      "body": "{\n    return createOrganization(prototype.getDisplayName(), prototype.getGroups());\n}"
    },
    {
      "name": "createOrganization",
      "description": "Create a new organization for a customer or the system.\n\nThe \"SYS\" group should be assigned for system users.\nThe \"APP\" group should be assigned for background applications.\nThe \"CRM\" group should be assigned for internal users.\nThe \"ORG\" group should be assigned for customer users.\n\n@param organizationDisplayName The name the organization should be displayed in.\n@param groups The list of permission groups the users can be assigned to.\n@return Details about the new organization",
      "type": "OrganizationDetails",
      "parameters": [
        {
          "name": "displayName",
          "type": "String"
        },
        {
          "name": "groups",
          "type": {
            "class": "List",
            "generics": ["String"]
          }
        }
      ]
    },
    {
      "name": "enableOrganization",
      "description": "Enable an existing organization that was disabled. If the organization is\nalready enabled then nothing will be modified.\n\n@param organizationId The organization id to enable.\n@return The organization that was enabled.",
      "type": "OrganizationSummary",
      "parameters": [{
        "name": "organizationId",
        "type": "Identifier"
      }]
    },
    {
      "name": "disableOrganization",
      "description": "Disable an existing organization that is active. If the organization is\nalready disabled then nothing will be modified.\n\nNote that SYS, APP and CRM organizations cannot be disabled as they are required\nfor the system to function.\n\n@param organizationId The organization id to disable.\n@return The organization that was disabled.",
      "type": "OrganizationSummary",
      "parameters": [{
        "name": "organizationId",
        "type": "Identifier"
      }]
    },
    {
      "name": "updateOrganizationDisplayName",
      "type": "OrganizationDetails",
      "parameters": [
        {
          "name": "organizationId",
          "type": "Identifier"
        },
        {
          "name": "name",
          "type": "String"
        }
      ]
    },
    {
      "name": "updateOrganizationMainLocation",
      "type": "OrganizationDetails",
      "parameters": [
        {
          "name": "organizationId",
          "type": "Identifier"
        },
        {
          "name": "locationId",
          "type": "Identifier"
        }
      ]
    },
    {
      "name": "updateOrganizationMainContact",
      "type": "OrganizationDetails",
      "parameters": [
        {
          "name": "organizationId",
          "type": "Identifier"
        },
        {
          "name": "personId",
          "type": "Identifier"
        }
      ]
    },
    {
      "name": "updateOrganizationGroups",
      "type": "OrganizationDetails",
      "parameters": [
        {
          "name": "organizationId",
          "type": "Identifier"
        },
        {
          "name": "groups",
          "type": {
            "class": "List",
            "generics": ["String"]
          }
        }
      ]
    },
    {
      "name": "findOrganizationSummary",
      "type": "OrganizationSummary",
      "parameters": [{
        "name": "organizationId",
        "type": "Identifier"
      }]
    },
    {
      "name": "findOrganizationDetails",
      "type": "OrganizationDetails",
      "parameters": [{
        "name": "organizationId",
        "type": "Identifier"
      }]
    },
    {
      "name": "countOrganizations",
      "type": "long",
      "parameters": [{
        "name": "filter",
        "type": "OrganizationsFilter"
      }]
    },
    {
      "name": "findOrganizationDetails",
      "type": {
        "class": "FilteredPage",
        "generics": ["OrganizationDetails"]
      },
      "parameters": [
        {
          "name": "filter",
          "type": "OrganizationsFilter"
        },
        {
          "name": "paging",
          "type": "Paging"
        }
      ]
    },
    {
      "name": "findOrganizationSummaries",
      "type": {
        "class": "FilteredPage",
        "generics": ["OrganizationSummary"]
      },
      "parameters": [
        {
          "name": "filter",
          "type": "OrganizationsFilter"
        },
        {
          "name": "paging",
          "type": "Paging"
        }
      ]
    },
    {
      "name": "findOrganizationDetails",
      "modifiers": ["default"],
      "type": {
        "class": "FilteredPage",
        "generics": ["OrganizationDetails"]
      },
      "parameters": [{
        "name": "filter",
        "type": "OrganizationsFilter"
      }],
      "body": "{\n    return findOrganizationDetails(filter, OrganizationsFilter.getDefaultPaging());\n}"
    },
    {
      "name": "findOrganizationSummaries",
      "modifiers": ["default"],
      "type": {
        "class": "FilteredPage",
        "generics": ["OrganizationSummary"]
      },
      "parameters": [{
        "name": "filter",
        "type": "OrganizationsFilter"
      }],
      "body": "{\n    return findOrganizationSummaries(filter, OrganizationsFilter.getDefaultPaging());\n}"
    },
    {
      "name": "defaultOrganizationsFilter",
      "modifiers": ["default"],
      "type": "OrganizationsFilter",
      "body": "{\n    return new OrganizationsFilter();\n}"
    }
  ]
}