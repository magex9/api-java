{
  "name": "AuthenticatedRolePolicy",
  "package": "ca.magex.crm.api.policies.authenticated",
  "imports": {
    "CRM_ADMIN": "ca.magex.crm.api.services.CrmAuthenticationService",
    "CrmRolePolicy": "ca.magex.crm.api.policies",
    "BasicRolePolicy": "ca.magex.crm.api.policies.basic",
    "CrmAuthenticationService": "ca.magex.crm.api.services",
    "CrmGroupService": "ca.magex.crm.api.services",
    "CrmRoleService": "ca.magex.crm.api.services",
    "Identifier": "ca.magex.crm.api.system"
  },
  "type": "class",
  "modifiers": ["public"],
  "implements": ["CrmRolePolicy"],
  "constructors": [{
    "name": "AuthenticatedRolePolicy",
    "description": "Authenticated Permission Policy handles roles and association checks required for policy approval\n\n@param auth\n@param permissions\n@param users",
    "modifiers": ["public"],
    "parameters": [
      {
        "name": "auth",
        "type": "CrmAuthenticationService"
      },
      {
        "name": "groups",
        "type": "CrmGroupService"
      },
      {
        "name": "roles",
        "type": "CrmRoleService"
      }
    ],
    "body": "{\n    this.auth = auth;\n    this.delegate = new BasicRolePolicy(groups, roles);\n}"
  }],
  "fields": [
    {
      "name": "auth",
      "modifiers": ["private"],
      "type": "CrmAuthenticationService"
    },
    {
      "name": "delegate",
      "modifiers": ["private"],
      "type": "CrmRolePolicy"
    }
  ],
  "methods": [
    {
      "name": "canCreateRole",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "groupId",
        "type": "Identifier"
      }],
      "body": "{\n    if (!delegate.canCreateRole(groupId)) {\n        return false;\n    }\n    /* only a CRM Admin can create a Role */\n    return auth.isUserInRole(CRM_ADMIN);\n}"
    },
    {
      "name": "canViewRoles",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "body": "{\n    if (!delegate.canViewRoles()) {\n        return false;\n    }\n    /* anybody can view roles */\n    return true;\n}"
    },
    {
      "name": "canViewRole",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "code",
        "type": "String"
      }],
      "body": "{\n    if (!delegate.canViewRole(code)) {\n        return false;\n    }\n    /* anybody can view a role */\n    return true;\n}"
    },
    {
      "name": "canViewRole",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "roleId",
        "type": "Identifier"
      }],
      "body": "{\n    if (!delegate.canViewRole(roleId)) {\n        return false;\n    }\n    /* anybody can view a role */\n    return true;\n}"
    },
    {
      "name": "canUpdateRole",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "roleId",
        "type": "Identifier"
      }],
      "body": "{\n    if (!delegate.canUpdateRole(roleId)) {\n        return false;\n    }\n    /* only a CRM Admin can update a Role */\n    return auth.isUserInRole(CRM_ADMIN);\n}"
    },
    {
      "name": "canEnableRole",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "roleId",
        "type": "Identifier"
      }],
      "body": "{\n    if (!delegate.canEnableRole(roleId)) {\n        return false;\n    }\n    /* only a CRM Admin can enable a Role */\n    return auth.isUserInRole(CRM_ADMIN);\n}"
    },
    {
      "name": "canDisableRole",
      "modifiers": ["public"],
      "type": "boolean",
      "annotations": [{"name": "Override"}],
      "parameters": [{
        "name": "roleId",
        "type": "Identifier"
      }],
      "body": "{\n    if (!delegate.canDisableRole(roleId)) {\n        return false;\n    }\n    /* only a CRM Admin can disable a Role */\n    return auth.isUserInRole(CRM_ADMIN);\n}"
    }
  ]
}